<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Seq.Api</name>
    </assembly>
    <members>
        <member name="T:Seq.Api.Client.SeqApiClient">
            <summary>
            A low-level client that provides navigation over the linked resource structure of the Seq HTTP API.
            </summary>
        </member>
        <member name="M:Seq.Api.Client.SeqApiClient.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Construct a <see cref="T:Seq.Api.Client.SeqApiClient"/>.
            </summary>
            <param name="serverUrl">The base URL of the Seq server.</param>
            <param name="apiKey">An API key to use when making requests to the server, if required.</param>
            <param name="useDefaultCredentials">Whether default credentials will be sent with HTTP requests; the default is <c>true</c>.</param>
        </member>
        <member name="M:Seq.Api.Client.SeqApiClient.#ctor(System.String,System.String,System.Action{System.Net.Http.HttpClientHandler})">
            <summary>
            Construct a <see cref="T:Seq.Api.Client.SeqApiClient"/>.
            </summary>
            <param name="serverUrl">The base URL of the Seq server.</param>
            <param name="apiKey">An API key to use when making requests to the server, if required.</param>
            <param name="configureHttpClientHandler">An optional callback to configure the <see cref="T:System.Net.Http.HttpClientHandler"/> used when making HTTP requests
            to the Seq API.</param>
        </member>
        <member name="P:Seq.Api.Client.SeqApiClient.ServerUrl">
            <summary>
            The base URL of the Seq server.
            </summary>
        </member>
        <member name="P:Seq.Api.Client.SeqApiClient.HttpClient">
            <summary>
            The HTTP client used when making requests to the Seq server. The HTTP client is configured with the server's base address, collects any cookies
            sent with responses from the API, and will send the appropriate <c>Accept</c> and <c>X-Seq-ApiKey</c> headers by default.
            </summary>
        </member>
        <member name="M:Seq.Api.Client.SeqApiClient.GetRootAsync(System.Threading.CancellationToken)">
            <summary>
            Get the root entity describing the server and providing links to other resources available from the API.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> supporting cancellation.</param>
            <returns>The root entity.</returns>
        </member>
        <member name="M:Seq.Api.Client.SeqApiClient.GetAsync``1(Seq.Api.Model.ILinked,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Issue a <c>GET</c> request returning a <typeparamref name="TEntity"/> by following the <paramref name="link"/> from <paramref name="entity"/>.
            </summary>
            <typeparam name="TEntity">The entity type into which the response should be deserialized.</typeparam>
            <param name="entity">An entity previously retrieved from the API.</param>
            <param name="link">The name of the outbound link template present in <paramref name="entity"/>'s <see cref="P:Seq.Api.Model.ILinked.Links"/> collection.</param>
            <param name="parameters">Named parameters to substitute into the link template, if required.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> supporting cancellation.</param>
            <returns>The response entity.</returns>
        </member>
        <member name="M:Seq.Api.Client.SeqApiClient.GetStringAsync(Seq.Api.Model.ILinked,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Issue a <c>GET</c> request returning a string by following the <paramref name="link"/> from <paramref name="entity"/>.
            </summary>
            <param name="entity">An entity previously retrieved from the API.</param>
            <param name="link">The name of the outbound link template present in <paramref name="entity"/>'s <see cref="P:Seq.Api.Model.ILinked.Links"/> collection.</param>
            <param name="parameters">Named parameters to substitute into the link template, if required.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> supporting cancellation.</param>
            <returns>The response as a string.</returns>
        </member>
        <member name="M:Seq.Api.Client.SeqApiClient.ListAsync``1(Seq.Api.Model.ILinked,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Issue a <c>GET</c> request returning a list of <typeparamref name="TEntity"/> by following the <paramref name="link"/> from <paramref name="entity"/>.
            </summary>
            <typeparam name="TEntity">The entity type into which the response items should be deserialized.</typeparam>
            <param name="entity">An entity previously retrieved from the API.</param>
            <param name="link">The name of the outbound link template present in <paramref name="entity"/>'s <see cref="P:Seq.Api.Model.ILinked.Links"/> collection.</param>
            <param name="parameters">Named parameters to substitute into the link template, if required.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> supporting cancellation.</param>
            <returns>The response entities.</returns>
        </member>
        <member name="M:Seq.Api.Client.SeqApiClient.PostAsync``1(Seq.Api.Model.ILinked,System.String,``0,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Issue a <c>POST</c> request accepting a serialized <typeparamref name="TEntity"/> to a <paramref name="link"/> from <paramref name="entity"/>.
            </summary>
            <typeparam name="TEntity">The entity type that will be serialized into the request payload.</typeparam>
            <param name="entity">An entity previously retrieved from the API.</param>
            <param name="link">The name of the outbound link template present in <paramref name="entity"/>'s <see cref="P:Seq.Api.Model.ILinked.Links"/> collection.</param>
            <param name="parameters">Named parameters to substitute into the link template, if required.</param>
            <param name="content">The request content.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> supporting cancellation.</param>
            <returns>A task that signals request completion.</returns>
        </member>
        <member name="M:Seq.Api.Client.SeqApiClient.PostAsync``2(Seq.Api.Model.ILinked,System.String,``0,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Issue a <c>POST</c> request accepting a serialized <typeparamref name="TEntity"/> and returning a <typeparamref name="TResponse"/> by following <paramref name="link"/> from <paramref name="entity"/>.
            </summary>
            <typeparam name="TEntity">The entity type that will be serialized into the request payload.</typeparam>
            <typeparam name="TResponse">The entity type into which the response should be deserialized.</typeparam>
            <param name="entity">An entity previously retrieved from the API.</param>
            <param name="link">The name of the outbound link template present in <paramref name="entity"/>'s <see cref="P:Seq.Api.Model.ILinked.Links"/> collection.</param>
            <param name="parameters">Named parameters to substitute into the link template, if required.</param>
            <param name="content">The request content.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> supporting cancellation.</param>
            <returns>The response entity.</returns>
        </member>
        <member name="M:Seq.Api.Client.SeqApiClient.PostReadStringAsync``1(Seq.Api.Model.ILinked,System.String,``0,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Issue a <c>POST</c> request accepting a serialized <typeparamref name="TEntity"/> and returning a string by following <paramref name="link"/> from <paramref name="entity"/>.
            </summary>
            <typeparam name="TEntity">The entity type that will be serialized into the request payload.</typeparam>
            <param name="entity">An entity previously retrieved from the API.</param>
            <param name="link">The name of the outbound link template present in <paramref name="entity"/>'s <see cref="P:Seq.Api.Model.ILinked.Links"/> collection.</param>
            <param name="parameters">Named parameters to substitute into the link template, if required.</param>
            <param name="content">The request content.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> supporting cancellation.</param>
            <returns>The response string.</returns>
        </member>
        <member name="M:Seq.Api.Client.SeqApiClient.PostReadStreamAsync``1(Seq.Api.Model.ILinked,System.String,``0,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Issue a <c>POST</c> request accepting a serialized <typeparamref name="TEntity"/> and returning a stream by following <paramref name="link"/> from <paramref name="entity"/>.
            </summary>
            <typeparam name="TEntity">The entity type that will be serialized into the request payload.</typeparam>
            <param name="entity">An entity previously retrieved from the API.</param>
            <param name="link">The name of the outbound link template present in <paramref name="entity"/>'s <see cref="P:Seq.Api.Model.ILinked.Links"/> collection.</param>
            <param name="parameters">Named parameters to substitute into the link template, if required.</param>
            <param name="content">The request content.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> supporting cancellation.</param>
            <returns>The response stream.</returns>
        </member>
        <member name="M:Seq.Api.Client.SeqApiClient.PutAsync``1(Seq.Api.Model.ILinked,System.String,``0,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Issue a <c>PUT</c> request accepting a serialized <typeparamref name="TEntity"/> to a <paramref name="link"/> from <paramref name="entity"/>.
            </summary>
            <typeparam name="TEntity">The entity type that will be serialized into the request payload.</typeparam>
            <param name="entity">An entity previously retrieved from the API.</param>
            <param name="link">The name of the outbound link template present in <paramref name="entity"/>'s <see cref="P:Seq.Api.Model.ILinked.Links"/> collection.</param>
            <param name="parameters">Named parameters to substitute into the link template, if required.</param>
            <param name="content">The request content.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> supporting cancellation.</param>
            <returns>A task that signals request completion.</returns>
        </member>
        <member name="M:Seq.Api.Client.SeqApiClient.DeleteAsync``1(Seq.Api.Model.ILinked,System.String,``0,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Issue a <c>DELETE</c> request accepting a serialized <typeparamref name="TEntity"/> to a <paramref name="link"/> from <paramref name="entity"/>.
            </summary>
            <typeparam name="TEntity">The entity type that will be serialized into the request payload.</typeparam>
            <param name="entity">An entity previously retrieved from the API.</param>
            <param name="link">The name of the outbound link template present in <paramref name="entity"/>'s <see cref="P:Seq.Api.Model.ILinked.Links"/> collection.</param>
            <param name="parameters">Named parameters to substitute into the link template, if required.</param>
            <param name="content">The request content.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> supporting cancellation.</param>
            <returns>A task that signals request completion.</returns>
        </member>
        <member name="M:Seq.Api.Client.SeqApiClient.DeleteAsync``2(Seq.Api.Model.ILinked,System.String,``0,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Issue a <c>DELETE</c> request accepting a serialized <typeparamref name="TEntity"/> to a <paramref name="link"/> from <paramref name="entity"/>.
            </summary>
            <typeparam name="TEntity">The entity type that will be serialized into the request payload.</typeparam>
            <typeparam name="TResponse">The entity type into which the response should be deserialized.</typeparam>
            <param name="entity">An entity previously retrieved from the API.</param>
            <param name="link">The name of the outbound link template present in <paramref name="entity"/>'s <see cref="P:Seq.Api.Model.ILinked.Links"/> collection.</param>
            <param name="parameters">Named parameters to substitute into the link template, if required.</param>
            <param name="content">The request content.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> supporting cancellation.</param>
            <returns>The response entity.</returns>
        </member>
        <member name="M:Seq.Api.Client.SeqApiClient.StreamAsync``1(Seq.Api.Model.ILinked,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Connect to a websocket at the address specified by following <paramref name="link"/> from <paramref name="entity"/>.
            </summary>
            <typeparam name="TEntity">The type of the values received over the websocket.</typeparam>
            <param name="entity">An entity previously retrieved from the API.</param>
            <param name="link">The name of the outbound link template present in <paramref name="entity"/>'s <see cref="P:Seq.Api.Model.ILinked.Links"/> collection.</param>
            <param name="parameters">Named parameters to substitute into the link template, if required.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> supporting cancellation.</param>
            <returns>A stream of values from the websocket.</returns>
        </member>
        <member name="M:Seq.Api.Client.SeqApiClient.StreamTextAsync(Seq.Api.Model.ILinked,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Connect to a websocket at the address specified by following <paramref name="link"/> from <paramref name="entity"/>.
            </summary>
            <param name="entity">An entity previously retrieved from the API.</param>
            <param name="link">The name of the outbound link template present in <paramref name="entity"/>'s <see cref="P:Seq.Api.Model.ILinked.Links"/> collection.</param>
            <param name="parameters">Named parameters to substitute into the link template, if required.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> supporting cancellation.</param>
            <returns>A stream of raw messages from the websocket.</returns>
        </member>
        <member name="M:Seq.Api.Client.SeqApiClient.Dispose">
            <inheritdoc/>>
        </member>
        <member name="T:Seq.Api.Client.SeqApiException">
            <summary>
            Thrown when an action cannot be performed.
            </summary>
        </member>
        <member name="M:Seq.Api.Client.SeqApiException.#ctor(System.String,System.Nullable{System.Net.HttpStatusCode})">
            <summary>
            Construct a <see cref="T:Seq.Api.Client.SeqApiException"/> with the given message and status code.
            </summary>
            <param name="message">A message describing the error.</param>
            <param name="statusCode">The corresponding status code returned from Seq, if available.</param>
        </member>
        <member name="P:Seq.Api.Client.SeqApiException.StatusCode">
            <summary>
            The status code returned from Seq, if available.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.AppInstances.AppInstanceEntity">
            <summary>
            App instances are individual processes based on a running <see cref="T:Seq.Api.Model.Apps.AppEntity"/> that can
            read from and write to the Seq event stream.
            </summary>
        </member>
        <member name="M:Seq.Api.Model.AppInstances.AppInstanceEntity.#ctor">
            <summary>
            Construct an <see cref="T:Seq.Api.Model.AppInstances.AppInstanceEntity"/> with default values.
            </summary>
            <remarks>Instead of constructing an instance directly, consider using
            <see cref="M:Seq.Api.ResourceGroups.AppInstancesResourceGroup.TemplateAsync(System.String,System.Threading.CancellationToken)"/> to obtain a partly-initialized instance.</remarks>
        </member>
        <member name="P:Seq.Api.Model.AppInstances.AppInstanceEntity.AppId">
            <summary>
            The id of the <see cref="T:Seq.Api.Model.Apps.AppEntity"/> that this is an instance of.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.AppInstances.AppInstanceEntity.Title">
            <summary>
            The user-friendly title of the app instance.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.AppInstances.AppInstanceEntity.Settings">
            <summary>
            Values for the settings exposed by the app.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.AppInstances.AppInstanceEntity.AcceptPrivilegedInvocation">
            <summary>
            If <c>true</c>, administrative users may invoke the app manually or through alerts.
            This field is read-only from the API and generally indicates that the app is an input.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.AppInstances.AppInstanceEntity.AcceptDirectInvocation">
            <summary>
            If <c>true</c>, regular users can manually send events to the app, or use the app
            as the target for alert notifications.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.AppInstances.AppInstanceEntity.InvocationOverridableSettings">
            <summary>
            The settings that can be overridden at invocation time (when an event is sent to
            the instance).
            </summary>
        </member>
        <member name="P:Seq.Api.Model.AppInstances.AppInstanceEntity.InvocationOverridableSettingDefinitions">
            <summary>
            Metadata describing the overridable settings. This field is provided by the server
            and cannot be modified.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.AppInstances.AppInstanceEntity.AcceptStreamedEvents">
            <summary>
            If <c>true</c>, events will be streamed to the app. Otherwise, events will be
            sent only manually or in response to alerts being triggered.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.AppInstances.AppInstanceEntity.StreamedSignalExpression">
            <summary>
            The signal expression describing which events will be sent to the app; if <c>null</c>,
            all events will reach the app.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.AppInstances.AppInstanceEntity.ArrivalWindow">
            <summary>
            If a value is specified, events will be buffered to disk and sorted by timestamp-order
            within the specified window. This is not recommended for performance reasons, and should
            be avoided when possible.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.AppInstances.AppInstanceEntity.SuppressionTime">
            <summary>
            The time after an event reaches the app during which no further events will be processed.
            The default <see cref="F:System.TimeSpan.Zero"/> indicates no suppression time, and all events
            will be processed in that case.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.AppInstances.AppInstanceEntity.EventsPerSuppressionWindow">
            <summary>
            If <see cref="P:Seq.Api.Model.AppInstances.AppInstanceEntity.SuppressionTime"/> is set, the number of events that will be allowed during the
            suppression window. The default is <c>1</c>, to allow only the initial event that triggered suppression.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.AppInstances.AppInstanceEntity.InputSettings">
            <summary>
            Settings that control how events are ingested through the app.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.AppInstances.AppInstanceEntity.ProcessMetrics">
            <summary>
            Metrics describing the state and activity of the app process.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.AppInstances.AppInstanceEntity.InputMetrics">
            <summary>
            Information about ingestion activity through this app.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.AppInstances.AppInstanceEntity.DiagnosticInputMetrics">
            <summary>
            Information about the app's diagnostic input.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.AppInstances.AppInstanceEntity.OutputMetrics">
            <summary>
            Information about events output through the app.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.AppInstances.AppInstanceEntity.IsManualInputOnly">
            <summary>
            Obsolete.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.AppInstances.AppInstanceEntity.DisallowManualInput">
            <summary>
            Obsolete.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.AppInstances.AppInstanceOutputMetricsPart">
            <summary>
            Describes the events reaching being output from Seq through the app.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.AppInstances.AppInstanceOutputMetricsPart.DispatchedEventsPerMinute">
            <summary>
            The number of events per minute sent from Seq to the app. Includes streamed events (if enabled),
            manual invocations, and alert notifications. There may be some delay between dispatching an event, and
            it being processed by the app.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.AppInstances.AppInstanceProcessMetricsPart">
            <summary>
            Metrics describing the running server-side process for an <see cref="T:Seq.Api.Model.AppInstances.AppInstanceEntity"/>.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.AppInstances.AppInstanceProcessMetricsPart.WorkingSetBytes">
            <summary>
            The size, in bytes, of the app process working set.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.AppInstances.AppInstanceProcessMetricsPart.IsRunning">
            <summary>
            If the app process is running, <c>true</c>; otherwise, <c>false</c>.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Apps.AppEntity">
            <summary>
            Seq apps are executable plug-ins that read from and write to the Seq event stream.
            </summary>
        </member>
        <member name="M:Seq.Api.Model.Apps.AppEntity.#ctor">
            <summary>
            Construct an <see cref="T:Seq.Api.Model.Apps.AppEntity"/> with default values.
            </summary>
            <remarks>Instead of constructing an instance directly, consider using
            <see cref="M:Seq.Api.ResourceGroups.AppsResourceGroup.TemplateAsync(System.Threading.CancellationToken)"/> to obtain a partly-initialized instance.</remarks>
        </member>
        <member name="P:Seq.Api.Model.Apps.AppEntity.Name">
            <summary>
            The friendly name of the app.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Apps.AppEntity.Description">
            <summary>
            A long-form description of the app.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Apps.AppEntity.AvailableSettings">
            <summary>
            Metadata describing the settings exposed by instances of the app.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Apps.AppEntity.AllowReprocessing">
            <summary>
            Whether instances of the app can safely process their own diagnostic events. The
            default is <c>false</c>. This option should not normally be set.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Apps.AppEntity.Package">
            <summary>
            Metadata describing the NuGet package containing the executable app components.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Apps.AppEntity.IsInput">
            <summary>
            If <c>true</c>, the app produces an input stream and does not accept events itself.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Apps.AppPackagePart">
            <summary>
            Describes a NuGet package containing executable app components.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Apps.AppPackagePart.NuGetFeedId">
            <summary>
            The id of the <see cref="T:Seq.Api.Model.Feeds.NuGetFeedEntity"/> from which the package was installed.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Apps.AppPackagePart.PackageId">
            <summary>
            The package id, for example <c>Seq.Input.HealthCheck</c>.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Apps.AppPackagePart.Version">
            <summary>
            The version of the package.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Apps.AppPackagePart.Authors">
            <summary>
            Package authorship information.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Apps.AppPackagePart.IconUrl">
            <summary>
            URL of an icon for the app package.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Apps.AppPackagePart.LicenseUrl">
            <summary>
            URL of the package license.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Apps.AppPackagePart.UpdateAvailable">
            <summary>
            Whether an update is known to be available for the app.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Apps.AppSettingPart">
            <summary>
            Describes a setting exposed by instances of an <see cref="T:Seq.Api.Model.Apps.AppEntity"/>.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Apps.AppSettingPart.Name">
            <summary>
            The unique name identifying the setting.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Apps.AppSettingPart.DisplayName">
            <summary>
            A friendly, descriptive name of the setting.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Apps.AppSettingPart.IsOptional">
            <summary>
            Whether the setting is required in order for the app to function.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Apps.AppSettingPart.HelpText">
            <summary>
            Long-form description of the setting.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Apps.AppSettingPart.Type">
            <summary>
            The type of value accepted for the setting; valid values are <c>Text</c>, <c>Select</c>,
            <c>LongText</c>, <c>Checkbox</c>, <c>Integer</c>, <c>Decimal</c>, and <c>Password</c>.
            </summary>
            <remarks>An enum was historically not used here in order to improve
            forwards/backwards compatibility.</remarks>
        </member>
        <member name="P:Seq.Api.Model.Apps.AppSettingPart.AllowedValues">
            <summary>
            For settings of <see cref="P:Seq.Api.Model.Apps.AppSettingPart.Type"/> <c>Select</c>, a description of the values that can be chosen
            for the setting.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Apps.AppSettingValuePart">
            <summary>
            Describes a value accepted for an <see cref="T:Seq.Api.Model.Apps.AppSettingPart"/> with type <c>Select</c>.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Apps.AppSettingValuePart.Value">
            <summary>
            The value accepted for the setting.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Apps.AppSettingValuePart.Description">
            <summary>
            Optionally, a description of the value, which Seq will use as the value's label in the UI. By default,
            the <see cref="P:Seq.Api.Model.Apps.AppSettingValuePart.Value"/> will be used as the label.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Backups.BackupEntity">
            <summary>
            Seq backups include metadata like users, signals, API keys and other configuration, but do not include
            the event stream. Backups are fully encrypted with AES-256 and cannot be restored without the secret key
            from the originating Seq instance.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Backups.BackupEntity.CreatedAt">
            <summary>
            The time at which the backup was created (ISO-8601-encoded date/time).
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Backups.BackupEntity.Filename">
            <summary>
            The filename (without path information) of the backup, within the server's
            configured backup location.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Backups.BackupEntity.FileSizeBytes">
            <summary>
            The size, in bytes, of the backup file.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Data.QueryExecutionStatisticsPart">
            <summary>
            Information describing the execution of a SQL-style query.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Data.QueryExecutionStatisticsPart.ScannedEventCount">
            <summary>
            The number of events inspected in the course of computing the query result. This will
            not include events that could be skipped based on index information or text pre-filtering.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Data.QueryExecutionStatisticsPart.MatchingEventCount">
            <summary>
            The number of events that contributed to the query result.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Data.QueryExecutionStatisticsPart.UncachedSegmentsScanned">
            <summary>
            Whether the query needed to search disk-backed storage.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Data.QueryExecutionStatisticsPart.ElapsedMilliseconds">
            <summary>
            The server-side elapsed time taken to compute the query result.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Data.QueryResultPart">
            <summary>
            The result of executing a SQL-style query. Results are hierarchical, rather
            than tabular, to reduce the amount of data transfer required to send events to
            the client.
            </summary>
            <remarks>
            Only one of <see cref="P:Seq.Api.Model.Data.QueryResultPart.Rows"/>, <see cref="P:Seq.Api.Model.Data.QueryResultPart.Slices"/>, or <see cref="P:Seq.Api.Model.Data.QueryResultPart.Series"/>
            will be present for a given result set.
            Generally, the CSV-based query endpoints are more convenient to use for
            simple ETL tasks.</remarks>
        </member>
        <member name="P:Seq.Api.Model.Data.QueryResultPart.Columns">
            <summary>
            The columns within the result set (at various levels of the hierarchy).
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Data.QueryResultPart.Rows">
            <summary>
            Result rows.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Data.QueryResultPart.Slices">
            <summary>
            Result time slices.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Data.QueryResultPart.Series">
            <summary>
            Result timeseries.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Data.QueryResultPart.Error">
            <summary>
            On error only, a description of the error.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Data.QueryResultPart.Reasons">
            <summary>
            Reasons for the <see cref="P:Seq.Api.Model.Data.QueryResultPart.Error"/>.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Data.QueryResultPart.Suggestion">
            <summary>
            A corrected version of the query, if one could be suggested.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Data.QueryResultPart.Statistics">
            <summary>
            Execution statistics.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Data.TimeseriesPart">
            <summary>
            A series of results.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Data.TimeseriesPart.Key">
            <summary>
            The key (e.g. grouping columns) that identify the timeseries.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Data.TimeseriesPart.Slices">
            <summary>
            The timestamped slices in the series.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Data.TimeSlicePart">
            <summary>
            Results of a query for a given time slice.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Data.TimeSlicePart.Time">
            <summary>
            The beginning of the interval contributing to the results,
            encoded as an ISO-8601 date/time string.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Data.TimeSlicePart.Rows">
            <summary>
            Result rows within the interval.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Diagnostics.MeasurementTimeseriesPart">
            <summary>
            A histogram presenting a measurement taken at equal intervals.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Diagnostics.MeasurementTimeseriesPart.MeasuredFrom">
            <summary>
            The point in time from which measurement begins.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Diagnostics.MeasurementTimeseriesPart.MeasurementIntervalMilliseconds">
            <summary>
            The interval at which the measurement is taken.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Diagnostics.MeasurementTimeseriesPart.Measurements">
            <summary>
            The measurements at each interval, beginning with <see cref="P:Seq.Api.Model.Diagnostics.MeasurementTimeseriesPart.MeasuredFrom"/>.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Diagnostics.ServerMetricsEntity">
            <summary>
            Metrics describing the state and performance of the Seq server.
            </summary>
        </member>
        <member name="M:Seq.Api.Model.Diagnostics.ServerMetricsEntity.#ctor">
            <summary>
            Construct a <see cref="T:Seq.Api.Model.Diagnostics.ServerMetricsEntity"/>.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Diagnostics.ServerMetricsEntity.EventStoreCacheStart">
            <summary>
            The start time in UTC of the events in the memory cache.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Diagnostics.ServerMetricsEntity.EventStoreCacheEnd">
            <summary>
            The end time in UTC of the events in the memory cache.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Diagnostics.ServerMetricsEntity.EventStoreDaysCached">
            <summary>
            The number of days of events able to fit in the memory cache.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Diagnostics.ServerMetricsEntity.EventStoreEventsCached">
            <summary>
            The number of events able to fit in the memory cache.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Diagnostics.ServerMetricsEntity.EventStoreDiskRemainingBytes">
            <summary>
            Bytes of free space remaining on the disk used for event storage.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Diagnostics.ServerMetricsEntity.InputArrivedEventsPerMinute">
            <summary>
            The number of events that arrived at the ingestion endpoint in the past minute.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Diagnostics.ServerMetricsEntity.InputIngestedEventsPerMinute">
            <summary>
            The number of events ingested in the past minute.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Diagnostics.ServerMetricsEntity.InputIngestedBytesPerMinute">
            <summary>
            The number of bytes of raw JSON event data ingested in the past minute (approximate).
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Diagnostics.ServerMetricsEntity.InvalidPayloadsPerMinute">
            <summary>
            The number of invalid event payloads seen in the past minute.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Diagnostics.ServerMetricsEntity.HttpUnauthorizedPayloadsPerMinute">
            <summary>
            The number of unauthorized event payloads seen in the past minute.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Diagnostics.ServerMetricsEntity.ProcessUptime">
            <summary>
            The length of time for which the Seq server process has been running.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Diagnostics.ServerMetricsEntity.ProcessWorkingSetBytes">
            <summary>
            The number of bytes working set held by the Seq server process.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Diagnostics.ServerMetricsEntity.ProcessThreads">
            <summary>
            The number of threads running in the Seq server process.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Diagnostics.ServerMetricsEntity.SystemMemoryUtilization">
            <summary>
            The proportion of system physical memory that is currently allocated.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Diagnostics.ServerMetricsEntity.QueriesPerMinute">
            <summary>
            The number of SQL-style queries executed in the past minute.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Diagnostics.ServerMetricsEntity.QueryCacheTimeSliceHitsPerMinute">
            <summary>
            The number of time slices from SQL-style queries that could be read from cache in the past minute.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Diagnostics.ServerMetricsEntity.QueryCacheInvalidationsPerMinute">
            <summary>
            The number of cached SQL query time slices invalidated in the past minute.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Diagnostics.ServerStatusPart">
            <summary>
            Describes the status of the Seq server.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Diagnostics.ServerStatusPart.StatusMessages">
            <summary>
            Individual status messages.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Diagnostics.StatusMessagePart">
            <summary>
            A status message relating to the Seq server.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Diagnostics.StatusMessagePart.Level">
            <summary>
            A descriptive level (<c>Information</c>, <c>Warning</c>, or <c>Error</c>).
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Diagnostics.StatusMessagePart.Message">
            <summary>
            The message text.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Diagnostics.Storage.ColumnDescriptionPart">
            <summary>
            A description of a column in a rowset.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Diagnostics.Storage.ColumnDescriptionPart.Label">
            <summary>
            A label for the column.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Diagnostics.Storage.ColumnDescriptionPart.Type">
            <summary>
            Additional metadata describing the role of the column; this is separate from,
            but related to, the runtime type of the column values.
            </summary>
        </member>
        <member name="M:Seq.Api.Model.Diagnostics.Storage.ColumnDescriptionPart.#ctor(System.String,Seq.Api.Model.Diagnostics.Storage.ColumnType)">
            <summary>
            Construct a <see cref="T:Seq.Api.Model.Diagnostics.Storage.ColumnDescriptionPart"/>.
            </summary>
            <param name="label">A label for the column.</param>
            <param name="type">Additional metadata describing the role of the column; this is separate from,
            but related to, the runtime type of the column values.</param>
        </member>
        <member name="T:Seq.Api.Model.Diagnostics.Storage.ColumnType">
            <summary>
            Additional metadata describing the role of a column; this is separate from,
            but related to, the runtime type of the column values.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Diagnostics.Storage.ColumnType.General">
            <summary>
            The column contains general data.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Diagnostics.Storage.ColumnType.Timestamp">
            <summary>
            The column contains timestamps that may be used to create a timeseries.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Diagnostics.Storage.RowsetPart">
            <summary>
            Values in rows and columns.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Diagnostics.Storage.RowsetPart.Columns">
            <summary>
            The columns of the rowset.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Diagnostics.Storage.RowsetPart.Rows">
            <summary>
            An array of rows, where each row is an array of values
            corresponding to the columns of the rowset.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Diagnostics.Storage.StorageConsumptionPart">
            <summary>
            Describes storage space consumed by the event store, for a range
            of event timestamps.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Diagnostics.Storage.StorageConsumptionPart.Range">
            <summary>
            The range of timestamps covered by the result.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Diagnostics.Storage.StorageConsumptionPart.IntervalMinutes">
            <summary>
            The duration of the timestamp interval covered by each result.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Diagnostics.Storage.StorageConsumptionPart.Results">
            <summary>
            A potentially-sparse rowset describing the storage space consumed
            for a range of timestamp intervals.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Entity">
            <summary>
            A uniquely-identifiable resource available from the Seq HTTP API.
            </summary>
            <remarks>Entities are the persistent top-level resources that have a stable
            URI. The API client uses the contrasting suffix <c>*Part</c> to designate
            resources that are transient or not directly addressable.</remarks>
        </member>
        <member name="M:Seq.Api.Model.Entity.#ctor">
            <summary>
            Construct an <see cref="T:Seq.Api.Model.Entity"/>.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Entity.Id">
            <summary>
            The entity's unique identifier. This will be <c>null</c> if a newly-instantiated <see cref="T:Seq.Api.Model.Entity"/>
            has not yet been sent to the server.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Entity.Links">
            <summary>
            A collection of outbound links from the entity. This will be empty if the entity
            was instantiated locally and not received from the API.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Entity.ExtensionData">
            <summary>
            Facilitates backwards compatibility in the Seq server. Should not be used by consumers/clients.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Events.DeleteResultPart">
            <summary>
            The (empty) result of executing a deletion request.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Events.EventEntity">
            <summary>
            An event.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Events.EventEntity.Timestamp">
            <summary>
            The ISO-8601 timestamp at which the event occurred.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Events.EventEntity.Properties">
            <summary>
            Properties associated with the event.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Events.EventEntity.MessageTemplateTokens">
            <summary>
            Pre-parsed tokens showing how the event's message is constructed from its properties.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Events.EventEntity.EventType">
            <summary>
            A string describing the event's type, in dollar-prefixed hexadecimal; e.g. <c>$c0ffee00</c>.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Events.EventEntity.Level">
            <summary>
            A level associated with an event; <c>null</c> may indicate that the event is informational.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Events.EventEntity.Exception">
            <summary>
            An exception, stack trace/backtrace associated with the event.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Events.EventEntity.RenderedMessage">
            <summary>
            If requested, a pre-rendered version of the templated event message.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Events.EventInputResultPart">
            <summary>
            The information returned from ingesting a batch of events.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Events.EventInputResultPart.MinimumLevelAccepted">
            <summary>
            The minimum level at which events will be accepted by the
            server.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Events.EventPropertyPart">
            <summary>
            A name/value property associated with an event.
            </summary>
        </member>
        <member name="M:Seq.Api.Model.Events.EventPropertyPart.#ctor(System.String,System.Object)">
            <summary>
            Construct an <see cref="T:Seq.Api.Model.Events.EventPropertyPart"/>.
            </summary>
            <param name="name">The property name (required).</param>
            <param name="value">The property value, or <c>null</c>.</param>
        </member>
        <member name="P:Seq.Api.Model.Events.EventPropertyPart.Name">
            <summary>
            The property name (required).
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Events.EventPropertyPart.Value">
            <summary>
            The property value, or <c>null</c>.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Events.MessageTemplateTokenPart">
            <summary>
            A token parsed from a <a href="https://messagetemplates.org">message template</a>.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Events.MessageTemplateTokenPart.Text">
            <summary>
            Plain text, if the token is a text token.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Events.MessageTemplateTokenPart.PropertyName">
            <summary>
            The name of the property to be rendered in place of the token, if a property token.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Events.MessageTemplateTokenPart.RawText">
            <summary>
            The raw source text from the message template (provided for both text and property tokens).
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Events.MessageTemplateTokenPart.FormattedValue">
            <summary>
            A pre-formatted value, if the token carries language-specific formatting directives.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Events.ResultSetPart">
            <summary>
            The result of a request for events matching a filter or signal.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Events.ResultSetPart.Events">
            <summary>
            Matching events.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Events.ResultSetPart.Statistics">
            <summary>
            Statistics describing the server resources used to construct the
            result set.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Expressions.ExpressionPart">
            <summary>
            Information about a filter expression.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Expressions.ExpressionPart.StrictExpression">
            <summary>
            The expression in strict syntax.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Expressions.ExpressionPart.MatchedAsText">
            <summary>
            Whether the expression was considered to be a free text search.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Expressions.ExpressionPart.ReasonIfMatchedAsText">
            <summary>
            If <see cref="P:Seq.Api.Model.Expressions.ExpressionPart.MatchedAsText"/> is <c>true</c>, the reason that the
            expression was not considered a valid structured expression.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Expressions.SqlExpressionPart">
            <summary>
            Describes an expression in strict SQL-style syntax.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Expressions.SqlExpressionPart.Expression">
            <summary>
            The expression in SQL-style syntax.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Feeds.NuGetFeedEntity">
            <summary>
            A NuGet feed.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Feeds.NuGetFeedEntity.Name">
            <summary>
            The feed name.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Feeds.NuGetFeedEntity.Location">
            <summary>
            A URI or folder path at which the feed is located.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Feeds.NuGetFeedEntity.Username">
            <summary>
            If required, a username that will be sent when accessing the feed.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Feeds.NuGetFeedEntity.NewPassword">
            <summary>
            When <see cref="P:Seq.Api.Model.Feeds.NuGetFeedEntity.Username"/> is non-empty, can be used to set an associated
            password.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.ILinked">
            <summary>
            A resource that carries outbound links.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.ILinked.Links">
            <summary>
            Links associated with the resource.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Inputs.ApiKeyEntity">
            <summary>
            API keys can be used to authenticate and identify log event sources, and for
            users to delegate some or all permissions to a client of the Seq API (app or integration) without exposing
            user credentials.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Inputs.ApiKeyEntity.Title">
            <summary>
            A friendly human-readable description of the API key.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Inputs.ApiKeyEntity.Token">
            <summary>
            The API key token. <see cref="P:Seq.Api.Model.Inputs.ApiKeyEntity.Token"/> can be specified explicitly when creating an API key, but is not
            readable once the API key is created. Leaving the token blank will cause the server to generate a
            cryptographically random API key token. After creation, the first few (additional, redundant) characters
            of the token will be readable from <see cref="P:Seq.Api.Model.Inputs.ApiKeyEntity.TokenPrefix"/>, but because only a cryptographically-secure
            hash of the token is stored internally, the token itself cannot be retrieved.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Inputs.ApiKeyEntity.TokenPrefix">
            <summary>
            A few characters from the start of the <see cref="P:Seq.Api.Model.Inputs.ApiKeyEntity.Token"/> stored as plain text, to aid in identifying tokens.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Inputs.ApiKeyEntity.InputSettings">
            <summary>
            Settings that control how events are ingested through the API key.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Inputs.ApiKeyEntity.IsDefault">
            <summary>
            If <c>true</c>, the key is the built-in (tokenless) API key representing unauthenticated HTTP ingestion.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Inputs.ApiKeyEntity.OwnerId">
            <summary>
            If non-<c>null</c>, the id of the user for whom this is a personal API key.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Inputs.ApiKeyEntity.AssignedPermissions">
            <summary>
            The <see cref="T:Seq.Api.Model.Security.Permission"/>s assigned to the API key. Note that, if the API key is owned by an individual user, permissions
            not held by the user will be ignored by the server.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Inputs.ApiKeyEntity.InputMetrics">
            <summary>
            Information about the ingestion activity using this API key.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Inputs.InputAppliedPropertyPart">
            <summary>
            A name/value property attached to events ingested through an API key.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Inputs.InputAppliedPropertyPart.Name">
            <summary>
            The property name (required).
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Inputs.InputAppliedPropertyPart.Value">
            <summary>
            The property value, or <c>null</c>.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Inputs.InputMetricsPart">
            <summary>
            Information about ingestion activity using an API key.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Inputs.InputMetricsPart.ArrivedEventsPerMinute">
            <summary>
            The number of events that arrived at the server from this input in the past minute.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Inputs.InputMetricsPart.IngestedEventsPerMinute">
            <summary>
            The number of events that ingested by the server from this input in the past minute.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Inputs.InputMetricsPart.IngestedBytesPerMinute">
            <summary>
            The raw JSON bytes (approximate) from this input that were ingested
            by the server in the past minute.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Inputs.InputMetricsPart.InvalidPayloadsPerMinute">
            <summary>
            The number of invalid payloads reaching this input in the past minute. Invalid payloads includes malformed
            and oversized JSON event bodies, as well as malformed or oversized batches.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Inputs.InputSettingsPart">
            <summary>
            Settings carried by API keys, (input) app instances, and other inputs.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Inputs.InputSettingsPart.AppliedProperties">
            <summary>
            Properties that will be automatically added to all events ingested using the key. These will override any properties with
            the same names already present on the event.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Inputs.InputSettingsPart.Filter">
            <summary>
            A filter that selects events to ingest. If <c>null</c>, all events received using the key will be ingested.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Inputs.InputSettingsPart.MinimumLevel">
            <summary>
            A minimum level at which events received using the key will be ingested. The level hierarchy understood by Seq is fuzzy
            enough to handle most common leveling schemes. This value will be provided to callers so that they can dynamically
            filter events client-side, if supported.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Inputs.InputSettingsPart.UseServerTimestamps">
            <summary>
            If <c>true</c>, timestamps already present on the events will be ignored, and server timestamps used instead. This is not
            recommended for most use cases.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.License.LicenseEntity">
            <summary>
            A Seq license certificate.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.License.LicenseEntity.LicenseText">
            <summary>
            The cryptographically-signed certificate that describes the
            license, or <c>null</c> if the server is using the default license.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.License.LicenseEntity.IsValid">
            <summary>
            Whether or not the license is valid for the server.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.License.LicenseEntity.IsSingleUser">
            <summary>
            If <c>true</c>, the server is using the default license which allows
            a single person to access the Seq server.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.License.LicenseEntity.SubscriptionId">
            <summary>
            If the license is a subscription, the subscription id.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.License.LicenseEntity.StatusDescription">
            <summary>
            Information about the status of the license.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.License.LicenseEntity.IsWarning">
            <summary>
            If <c>true</c>, see <see cref="P:Seq.Api.Model.License.LicenseEntity.StatusDescription"/> for important information.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.License.LicenseEntity.CanRenewOnlineNow">
            <summary>
            If <c>true</c>, the license can be renewed online.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.License.LicenseEntity.LicensedUsers">
            <summary>
            The number of users licensed to access the Seq server, or <c>null</c> if
            the license has no user limit.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.License.LicenseEntity.AutomaticallyRefresh">
            <summary>
            If the license is for a subscription, automatically check datalust.co and
            update the license when the subscription is renewed or tier changed.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Link">
            <summary>
            A hypermedia link. A link is an RFC 6570 URI template that can be
            parameterized in order to produce a complete URI (if the template contains no
            parameters then it may also be a literal URI).
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Link.Empty">
            <summary>
            An empty link.
            </summary>
        </member>
        <member name="M:Seq.Api.Model.Link.#ctor(System.String)">
            <summary>
            Construct a link.
            </summary>
            <param name="template">The URI template.</param>
        </member>
        <member name="P:Seq.Api.Model.Link.Template">
            <summary>
            Get the unprocessed URI template.
            </summary>
        </member>
        <member name="M:Seq.Api.Model.Link.GetUri(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Parameterize the link to construct a URI.
            </summary>
            <param name="parameters">Parameters to substitute into the template, if any.</param>
            <returns>A constructed URI.</returns>
            <remarks>This method ensures that templates containing parameters cannot be accidentally
            used as URIs.</remarks>
        </member>
        <member name="T:Seq.Api.Model.LinkCollection">
            <summary>
            A collection of <see cref="T:Seq.Api.Model.Link"/>s indexed by case-insensitive name.
            </summary>
        </member>
        <member name="M:Seq.Api.Model.LinkCollection.#ctor">
            <summary>
            Construct a <see cref="T:Seq.Api.Model.LinkCollection"/>.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.LogEvents.LogEventLevel">
            <summary>
            Specifies the meaning and relative importance of a log event.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.LogEvents.LogEventLevel.Verbose">
            <summary>
            Anything and everything you might want to know about
            a running block of code.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.LogEvents.LogEventLevel.Debug">
            <summary>
            Internal system events that aren't necessarily
            observable from the outside.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.LogEvents.LogEventLevel.Information">
            <summary>
            The lifeblood of operational intelligence - things
            happen.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.LogEvents.LogEventLevel.Warning">
            <summary>
            Service is degraded or endangered.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.LogEvents.LogEventLevel.Error">
            <summary>
            Functionality is unavailable, invariants are broken
            or data is lost.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.LogEvents.LogEventLevel.Fatal">
            <summary>
            If you have a pager, it goes off when one of these
            occurs.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Monitoring.AlertPart">
            <summary>
            An alert attached to a dashboard chart.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.AlertPart.Id">
            <summary>
            The unique id assigned to the alert.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.AlertPart.Condition">
            <summary>
            The alert condition. This is effectively a <c>having</c> clause over the grouped results
            computed by the <see cref="T:Seq.Api.Model.Monitoring.ChartQueryPart"/>.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.AlertPart.Title">
            <summary>
            A friendly, human-readable description of the alert.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.AlertPart.MeasurementWindow">
            <summary>
            The interval within which the alert condition will be measured.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.AlertPart.StabilizationWindow">
            <summary>
            The time allowed for events to reach the server before being included in alert calculations.
            This is relative to the current server clock.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.AlertPart.SuppressionTime">
            <summary>
            The time after the alert files within which no further notifications will be sent for the
            alert.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.AlertPart.Level">
            <summary>
            An informational level that suggests the importance of the alert.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.AlertPart.NotificationAppInstanceId">
            <summary>
            The id of an <see cref="T:Seq.Api.Model.AppInstances.AppInstanceEntity"/> that will receive notifications from the alert.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.AlertPart.NotificationAppSettingOverrides">
            <summary>
            Additional properties that will be used to configure the notification app when triggered
            by the alert.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Monitoring.AlertStateEntity">
            <summary>
            Describes the state of an active alert.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.AlertStateEntity.AlertId">
            <summary>
            The unique id of the alert being described.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.AlertStateEntity.Title">
            <summary>
            The alert's title.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.AlertStateEntity.ChartTitle">
            <summary>
            The title of the chart to which the alert is attached.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.AlertStateEntity.DashboardTitle">
            <summary>
            The title of the dashboards in which the alert is set.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.AlertStateEntity.OwnerId">
            <summary>
            The user id of the user who owns the alert; if <c>null</c>, the alert is shared.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.AlertStateEntity.Level">
            <summary>
            The notification level associated with the alert.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.AlertStateEntity.NotificationAppInstanceId">
            <summary>
            The id of an app instance that will receive notifications when the alert is triggered.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.AlertStateEntity.LastCheck">
            <summary>
            The time at which the alert was last checked. Not preserved across server restarts.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.AlertStateEntity.LastNotification">
            <summary>
            The time at which the alert last triggered a notification. Not preserved across server restarts.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.AlertStateEntity.SuppressedUntil">
            <summary>
            The time until which no further notifications will be sent by the alert.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.AlertStateEntity.IsFailing">
            <summary>
            <c>true</c> if the alert is in the failing state; otherwise, <c>false</c>.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Monitoring.ChartDisplayStylePart">
            <summary>
            How a chart will be displayed on a dashboard.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.ChartDisplayStylePart.WidthColumns">
            <summary>
            The width of the chart, in 1/12th columns.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.ChartDisplayStylePart.HeightRows">
            <summary>
            The height of the chart, in rows.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Monitoring.ChartPart">
            <summary>
            A chart that appears on a dashboard.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.ChartPart.Id">
            <summary>
            The unique id assigned to the chart.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.ChartPart.Title">
            <summary>
            A human-friendly title for the chart.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.ChartPart.SignalExpression">
            <summary>
            An optional <see cref="T:Seq.Api.Model.Signals.SignalExpressionPart"/> that limits what data the chart will display.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.ChartPart.Queries">
            <summary>
            The individual queries making up the chart. In most instances, only one query is currently supported
            here.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.ChartPart.DisplayStyle">
            <summary>
            How the chart will appear on the dashboard.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Monitoring.ChartQueryPart">
            <summary>
            A query within a chart.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.ChartQueryPart.Id">
            <summary>
            The unique id assigned to the query.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.ChartQueryPart.Measurements">
            <summary>
            Individual measurements included in the query. These are effectively projected columns.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.ChartQueryPart.Where">
            <summary>
            An optional filtering <c>where</c> clause limiting the data that contributes to the chart.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.ChartQueryPart.SignalExpression">
            <summary>
            An optional <see cref="T:Seq.Api.Model.Signals.SignalExpressionPart"/> limiting the data that contributes to the chart.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.ChartQueryPart.GroupBy">
            <summary>
            A series of expressions used to group data returned by the query.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.ChartQueryPart.DisplayStyle">
            <summary>
            How measurements included in the chart will be displayed.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.ChartQueryPart.Alerts">
            <summary>
            Alerts attached to the chart.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.ChartQueryPart.Having">
            <summary>
            A filter that limits which groups will be displayed on the chart. Not supported by all chart types.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.ChartQueryPart.OrderBy">
            <summary>
            An ordering applied to the results of the query; not supported by all chart types.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.ChartQueryPart.Limit">
            <summary>
            The row limit used for the query. By default, a server-determined limit will be applied.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Monitoring.DashboardEntity">
            <summary>
            A dashboard.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.DashboardEntity.OwnerId">
            <summary>
            The user who owns the dashboard. If <c>null</c>, the dashboard is shared.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.DashboardEntity.Title">
            <summary>
            The friendly, human-readable title for the dashboard.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.DashboardEntity.IsProtected">
            <summary>
            If <c>true</c>, only users with <see cref="F:Seq.Api.Model.Security.Permission.Setup"/> can modify the dashboard.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.DashboardEntity.SignalExpression">
            <summary>
            An optional <see cref="T:Seq.Api.Model.Signals.SignalExpressionPart"/> that limits the data contributing to the dashboard.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.DashboardEntity.Charts">
            <summary>
            The list of charts included in the dashboard.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Monitoring.MeasurementDisplayPalette">
            <summary>
            The color palette used for displaying a measurement on a chart.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Monitoring.MeasurementDisplayPalette.Default">
            <summary>
            The default palette.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Monitoring.MeasurementDisplayPalette.Reds">
            <summary>
            A predominantly red palette.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Monitoring.MeasurementDisplayPalette.Greens">
            <summary>
            A predominantly green palette.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Monitoring.MeasurementDisplayPalette.Blues">
            <summary>
            A predominantly blue palette.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Monitoring.MeasurementDisplayPalette.OrangePurple">
            <summary>
            An orange/purple palette.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Monitoring.MeasurementDisplayStylePart">
            <summary>
            How a measurement will be displayed within a chart.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.MeasurementDisplayStylePart.Type">
            <summary>
            The type of display used for the measurement.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.MeasurementDisplayStylePart.LineFillToZeroY">
            <summary>
            For line chart measurement display types, whether the area under the line will be filled.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.MeasurementDisplayStylePart.LineShowMarkers">
            <summary>
            For line chart measurement display types, whether the points along the line will be visibly marked.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.MeasurementDisplayStylePart.BarOverlaySum">
            <summary>
            For bar chart measurement display types, whether the sum of all bars will be shown as an overlay.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.MeasurementDisplayStylePart.SuppressLegend">
            <summary>
            For measurement display types that include a legend, whether the legend will be shown.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.MeasurementDisplayStylePart.Palette">
            <summary>
            The color palette used to display the chart.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Monitoring.MeasurementDisplayType">
            <summary>
            The method used to visually represent a measurement.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Monitoring.MeasurementDisplayType.Line">
            <summary>
            A line chart. Requires the measurement and query to include a time axis.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Monitoring.MeasurementDisplayType.Bar">
            <summary>
            A bar chart.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Monitoring.MeasurementDisplayType.Point">
            <summary>
            A point (scatter) chart.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Monitoring.MeasurementDisplayType.Value">
            <summary>
            A single textual value. Requires that the measurement and query produce a single value.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Monitoring.MeasurementDisplayType.Pie">
            <summary>
            A (donut-styled) pie chart.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Monitoring.MeasurementDisplayType.Table">
            <summary>
            A table of raw data values.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Monitoring.MeasurementPart">
            <summary>
            A measurement that contributes to a chart.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.MeasurementPart.Value">
            <summary>
            The expression (<c>select</c>ed column) that computes the value of the measurement.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Monitoring.MeasurementPart.Label">
            <summary>
            An optional label for the measurement (effectively the right-hand size of an <c>as</c> clause).
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Permalinks.PermalinkEntity">
            <summary>
            A permanently preserved event with a stable URI.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Permalinks.PermalinkEntity.UnknownId">
            <summary>
            When retrieving an event that <em>may</em> be permalinked (backwards compatibility),
            this hint is given by specifying `permalinkId=unknown` in the API call.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Permalinks.PermalinkEntity.OwnerId">
            <summary>
            The owner of the permalink.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Permalinks.PermalinkEntity.EventId">
            <summary>
            The original id of the permalinked event.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Permalinks.PermalinkEntity.CreatedUtc">
            <summary>
            When the permalink was created.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Permalinks.PermalinkEntity.Event">
            <summary>
            The event itself. Only populated when explicitly requested from the API.
            See <see cref="M:Seq.Api.ResourceGroups.PermalinksResourceGroup.FindAsync(System.String,System.Boolean,System.Boolean,System.Threading.CancellationToken)"/>.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.ResourceGroup">
            <summary>
            A resource group is a logical partitioning of the API, usually
            associated with a particular type of entity.
            </summary>
        </member>
        <member name="M:Seq.Api.Model.ResourceGroup.#ctor">
            <summary>
            Construct a <see cref="T:Seq.Api.Model.ResourceGroup"/>.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.ResourceGroup.Links">
            <inheritdoc/>
        </member>
        <member name="T:Seq.Api.Model.Retention.RetentionPolicyEntity">
            <summary>
            A retention policy. Identifies a subset of events to delete at a specified age.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Retention.RetentionPolicyEntity.RetentionTime">
            <summary>
            The age at which events will be deleted by the policy. This is based on the
            events' timestamps relative to the server's clock.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Retention.RetentionPolicyEntity.RemovedSignalExpression">
            <summary>
            An optional <see cref="T:Seq.Api.Model.Signals.SignalExpressionPart"/> describing the set of events
            to delete. If <c>null</c>, the policy will efficiently truncate the event store,
            deleting all events.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Retention.RetentionPolicyEntity.SignalId">
            <summary>
            Obsolete.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Root.RootEntity">
            <summary>
            Information about the API exposed by the server.
            </summary>
        </member>
        <member name="M:Seq.Api.Model.Root.RootEntity.#ctor">
            <summary>
            Construct a <see cref="T:Seq.Api.Model.Root.RootEntity"/>.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Root.RootEntity.Product">
            <summary>
            The product serving the API.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Root.RootEntity.Version">
            <summary>
            The version of the product serving the API.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Root.RootEntity.InstanceName">
            <summary>
            An informational name identifying the instance.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Root.RootEntity.Links">
            <summary>
            Links to resources exposed by the API.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Security.Permission">
            <summary>
            A permission is an access right 1) held by a principal, and 2) demanded by an endpoint. Permissions
            may be broad, such as the permission to modify administrative settings, or narrow (e.g. currently the
            permission to ingest events).
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Security.Permission.Undefined">
            <summary>
            A sentinel value to detect uninitialized permissions.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Security.Permission.Public">
            <summary>
            Access to publicly-visible assets - the API root/metadata, HTML, JavaScript, CSS, information necessary
            to initiate the login process, and so-on.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Security.Permission.Ingest">
            <summary>
            Add events to the event store.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Security.Permission.Read">
            <summary>
            Query events, dashboards, signals, app instances.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Security.Permission.Write">
            <summary>
            Write-access to signals, alerts, preferences etc.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Security.Permission.Setup">
            <summary>
            Access to administrative features of Seq, management of other users, app installation, backups.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Security.RoleEntity">
            <summary>
            A role is a set of permissions designed to support a particular type of user.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Security.RoleEntity.Title">
            <summary>
            The name of the role.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Security.RoleEntity.Permissions">
            <summary>
            Permissions granted to users in the role.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Security.WellKnownRole">
            <summary>
            Obsolete.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Security.WellKnownRole.AdministratorRoleId">
            <summary>
            Obsolete.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Security.WellKnownRole.UserRoleId">
            <summary>
            Obsolete.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Settings.InternalErrorReportingSettingsPart">
            <summary>
            Settings for internal error reporting.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Settings.InternalErrorReportingSettingsPart.InternalErrorReportingEnabled">
            <summary>
            If <c>true</c>, redacted internal error reports will be sent
            automatically to Datalust.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Settings.InternalErrorReportingSettingsPart.ReplyEmail">
            <summary>
            If internal error reporting is enabled, an optional email address
            that will be attached to error reports so that the support team
            at Datalust can respond with fix/mitigation information.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Settings.SettingEntity">
            <summary>
            A Seq system-level setting. Note that only runtime-modifiable
            settings are exposed this way. Other configuration options are
            set using the Seq server command-line.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Settings.SettingEntity.Name">
            <summary>
            The name of the setting. See <see cref="T:Seq.Api.Model.Settings.SettingName"/> for a selection
            of current values.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Settings.SettingEntity.Value">
            <summary>
            The value of the setting.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Settings.SettingName">
            <summary>
            Runtime-modifiable setting names. See also <see cref="T:Seq.Api.Model.Settings.SettingEntity"/> and
            <see cref="T:Seq.Api.ResourceGroups.SettingsResourceGroup"/>.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Settings.SettingName.AuthenticationProvider">
            <summary>
            The authentication provider to use. Allowed values are <c>null</c> (local username/password),
            <c>"Active Directory"</c>, <c>"Azure Active Directory"</c> and <c>"OpenID Connect"</c>.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Settings.SettingName.AutomaticAccessADGroup">
            <summary>
            The name of an Active Directory group within which users will be automatically
            be granted user access to Seq.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Settings.SettingName.AutomaticallyGrantUserAccessToADAccounts">
            <summary>
            If <c>true</c>, Azure Active Directory accounts in the configured tenant will
            be automatically granted user access to Seq.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Settings.SettingName.AutomaticallyProvisionAuthenticatedUsers">
            <summary>
            If <c>true</c>, users authenticated with the configured authentication provider
            be automatically granted default user access to Seq.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Settings.SettingName.AzureADAuthority">
            <summary>
            The AAD authority. The default is <c>login.windows.net</c>; government cloud users may
            require <c>login.microsoftonline.us</c> or similar.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Settings.SettingName.AzureADClientId">
            <summary>
            The Azure Active Directory client id.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Settings.SettingName.AzureADClientKey">
            <summary>
            The Azure Active Directory client key.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Settings.SettingName.AzureADTenantId">
            <summary>
            The Azure Active Directory tenant id.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Settings.SettingName.BackupLocation">
            <summary>
            Server-local filesystem location where automatic backups are stored.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Settings.SettingName.BackupsToKeep">
            <summary>
            The number of backups to keep.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Settings.SettingName.BackupUtcTimeOfDay">
            <summary>
            The UTC time of day to record new backups.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Settings.SettingName.CheckForPackageUpdates">
            <summary>
            If <c>true</c>, Seq will periodically check configured NuGet feed for
            updated versions of installed app packages, and
            set <see cref="P:Seq.Api.Model.Apps.AppPackagePart.UpdateAvailable"/> accordingly.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Settings.SettingName.CheckForUpdates">
            <summary>
            If <c>true</c>, Seq will periodically check for new Seq versions, and
            create an <see cref="T:Seq.Api.Model.Updates.AvailableUpdateEntity"/> accordingly.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Settings.SettingName.InstanceTitle">
            <summary>
            A friendly, public, human-readable title identifying this particular Seq instance.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Settings.SettingName.IsActiveDirectoryAuthentication">
            <summary>
            If <c>true</c>, the server supports Active Directory authentication.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Settings.SettingName.IsAuthenticationEnabled">
            <summary>
            If <c>true</c>, the server has authentication enabled.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Settings.SettingName.MinimumFreeStorageSpace">
            <summary>
            The minimum storage space, in bytes, on the disk containing log events, before
            Seq will stop accepting new events.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Settings.SettingName.NewUserRoleIds">
            <summary>
            A comma-separated list of role ids that will be assigned to new users by default.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Settings.SettingName.NewUserShowSignalIds">
            <summary>
            A comma-separated list of (shared) signal ids that will be included in any new user's
            personal default workspace.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Settings.SettingName.NewUserShowQueryIds">
            <summary>
            A comma-separated list of (shared) SQL query ids that will be included in any new user's
            personal default workspace.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Settings.SettingName.NewUserShowDashboardIds">
            <summary>
            A comma-separated list of (shared) dashboard ids that will be included in any new user's
            personal default workspace.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Settings.SettingName.OpenIdConnectAuthority">
            <summary>
            If using OpenID Connect authentication, the URL of the authorization endpoint. For example,
            <c>https://example.com</c>.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Settings.SettingName.OpenIdConnectClientId">
            <summary>
            If using OpenID Connect, the client id assigned to Seq in the provider.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Settings.SettingName.OpenIdConnectClientSecret">
            <summary>
            If using OpenID Connect, the client secret assigned to Seq in the provider.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Settings.SettingName.OpenIdConnectScopes">
            <summary>
            If using OpenID Connect, the scopes Seq will request when authorizing the client, as a comma-separated
            list. For example, <c>openid, profile, email</c>.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Settings.SettingName.RequireApiKeyForWritingEvents">
            <summary>
            If <c>true</c>, ingestion requests incoming via HTTP must be authenticated using an API key or
            logged-in user session. Only effective when <see cref="F:Seq.Api.Model.Settings.SettingName.IsAuthenticationEnabled"/> is <c>true</c>.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Settings.SettingName.RawEventMaximumContentLength">
            <summary>
            The maximum size, in bytes of UTF-8-encoded JSON, beyond which individual events will be rejected.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Settings.SettingName.RawPayloadMaximumContentLength">
            <summary>
            The maximum size, in HTTP request content bytes, beyond which ingestion requests will be rejected.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Settings.SettingName.SecretKeyIsBackedUp">
            <summary>
            Tracks whether an admin user has dismissed the secret key backup warning.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Settings.SettingName.ThemeStyles">
            <summary>
            A snippet of CSS that will be included in the front-end's user interface styles.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Shared.DateTimeRange">
            <summary>
            A range represented by a start and end <see cref="T:System.DateTime"/>.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Shared.DateTimeRange.Start">
            <summary>
            The (inclusive) start of the range.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Shared.DateTimeRange.End">
            <summary>
            The (exclusive) end of the range.
            </summary>
        </member>
        <member name="M:Seq.Api.Model.Shared.DateTimeRange.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Construct a <see cref="T:Seq.Api.Model.Shared.DateTimeRange"/>.
            </summary>
            <param name="start">The (inclusive) start of the range.</param>
            <param name="end">The (exclusive) end of the range.</param>
        </member>
        <member name="T:Seq.Api.Model.Shared.DeferredRequestEntity">
            <summary>
            An entity representing a request that will be executed as a long-running (background) task.
            Includes a link where the result of the request can be accessed.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Shared.DescriptiveFilterPart">
            <summary>
            An expression-based filter that carries additional descriptive information.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Shared.DescriptiveFilterPart.Description">
            <summary>
            A friendly, human-readable description of the filter.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Shared.DescriptiveFilterPart.DescriptionIsExcluded">
            <summary>
            If <c>true</c>, the description identifies events excluded by the filter. The
            Seq UI uses this to show the description in strikethrough.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Shared.DescriptiveFilterPart.Filter">
            <summary>
            The strictly-valid expression language filter that identifies matching events.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Shared.DescriptiveFilterPart.FilterNonStrict">
            <summary>
            The original ("fuzzy") text entered by the user into the filter bar when
            creating the filter. This may not be syntactically valid, e.g. it may be
            interpreted as free text - hence while it's displayed in the UI and forms the
            basis of user editing of the filter, the <see cref="P:Seq.Api.Model.Shared.DescriptiveFilterPart.Filter"/> value is executed.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Shared.ErrorPart">
            <summary>
            An error returned from the API.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Shared.ErrorPart.Error">
            <summary>
            The error message.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Shared.ResultSetStatus">
            <summary>
            Information about the state of an event result set.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Shared.ResultSetStatus.Unknown">
            <summary>
            Uninitialized value.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Shared.ResultSetStatus.Partial">
            <summary>
            Still more to search (even if this result set is empty).
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Shared.ResultSetStatus.Complete">
            <summary>
            Covers the whole range.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Shared.ResultSetStatus.Full">
            <summary>
            Retrieved the requested event count, then stopped.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Shared.StatisticsPart">
            <summary>
            Information about a request to search for events.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Shared.StatisticsPart.Elapsed">
            <summary>
            The server-side elapsed time taken satisfying the request.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Shared.StatisticsPart.ScannedEventCount">
            <summary>
            The number of events that were scanned in the search (and were not
            able to be excluded based on index information or pre-filtering).
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Shared.StatisticsPart.LastReadEventId">
            <summary>
            The id of the last event inspected in the search.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Shared.StatisticsPart.LastReadEventTimestamp">
            <summary>
            The timestamp of the last event inspected in the search.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Shared.StatisticsPart.Status">
            <summary>
            Status of the result set.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Shared.StatisticsPart.UncachedSegmentsScanned">
            <summary>
            Whether it was necessary to read from disk in processing this request.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Signals.SignalColumnPart">
            <summary>
            An expression that will be displayed as a column when a signal
            including it is selected.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Signals.SignalColumnPart.Expression">
            <summary>
            The expression to show as a column.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Signals.SignalEntity">
            <summary>
            A signal is a collection of filters that identifies a subset of the event stream.
            </summary>
        </member>
        <member name="M:Seq.Api.Model.Signals.SignalEntity.#ctor">
            <summary>
            Construct a <see cref="T:Seq.Api.Model.Signals.SignalEntity"/>.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Signals.SignalEntity.Title">
            <summary>
            The friendly, human readable title of the signal.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Signals.SignalEntity.Description">
            <summary>
            A long-form description of the signal's purpose and contents.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Signals.SignalEntity.Filters">
            <summary>
            Filters that are combined (using the <c>and</c> operator) to identify events matching the filter.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Signals.SignalEntity.Columns">
            <summary>
            Expressions that show as columns when the signal is selected in the events screen.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Signals.SignalEntity.IsRestricted">
            <summary>
            Obsolete.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Signals.SignalEntity.IsProtected">
            <summary>
            If <c>true</c>, the signal can only be modified by users with the <see cref="F:Seq.Api.Model.Security.Permission.Setup"/> permission.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Signals.SignalEntity.Grouping">
            <summary>
            How the signal is grouped in the Seq UI.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Signals.SignalEntity.ExplicitGroupName">
            <summary>
            If <see cref="P:Seq.Api.Model.Signals.SignalEntity.Grouping"/> is <see cref="F:Seq.Api.Model.Signals.SignalGrouping.Explicit"/>, the name of the group in which the signal appears.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Signals.SignalEntity.OwnerId">
            <summary>
            The user id of the user who owns the signal; if <c>null</c>, the signal is shared.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Signals.SignalExpressionKind">
            <summary>
            The type of expression represented by a <see cref="T:Seq.Api.Model.Signals.SignalExpressionPart"/>.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Signals.SignalExpressionKind.None">
            <summary>
            Uninitialized value.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Signals.SignalExpressionKind.Signal">
            <summary>
            The expression identifies a single signal.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Signals.SignalExpressionKind.Intersection">
            <summary>
            The expression is an intersection (<c>and</c> operation) of two signal expressions.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Signals.SignalExpressionKind.Union">
            <summary>
            The expression is a union (<c>or</c> operation) of two signal expressions.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Signals.SignalExpressionPart">
            <summary>
            A signal expression combines one or more signals to identify a subset of events.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Signals.SignalExpressionPart.Kind">
            <summary>
            The kind of this expression. Signal expressions form a tree of nodes; the <see cref="P:Seq.Api.Model.Signals.SignalExpressionPart.Kind"/>
            determines what kind of node this expression is, and therefore which other properties
            of the <see cref="T:Seq.Api.Model.Signals.SignalExpressionPart"/> are valid.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Signals.SignalExpressionPart.SignalId">
            <summary>
            When <see cref="P:Seq.Api.Model.Signals.SignalExpressionPart.Kind"/> is <see cref="F:Seq.Api.Model.Signals.SignalExpressionKind.Signal"/>, the id of the
            signal represented by this expression node.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Signals.SignalExpressionPart.Left">
            <summary>
            When <see cref="P:Seq.Api.Model.Signals.SignalExpressionPart.Kind"/> is <see cref="F:Seq.Api.Model.Signals.SignalExpressionKind.Intersection"/> or
            <see cref="F:Seq.Api.Model.Signals.SignalExpressionKind.Union"/>, the left side of the operation.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Signals.SignalExpressionPart.Right">
            <summary>
            When <see cref="P:Seq.Api.Model.Signals.SignalExpressionPart.Kind"/> is <see cref="F:Seq.Api.Model.Signals.SignalExpressionKind.Intersection"/> or
            <see cref="F:Seq.Api.Model.Signals.SignalExpressionKind.Union"/>, the right side of the operation.
            </summary>
        </member>
        <member name="M:Seq.Api.Model.Signals.SignalExpressionPart.Signal(System.String)">
            <summary>
            Create a <see cref="T:Seq.Api.Model.Signals.SignalExpressionPart"/> representing a single signal.
            </summary>
            <param name="signalId">The id of the signal.</param>
            <returns>The equivalent expression.</returns>
        </member>
        <member name="M:Seq.Api.Model.Signals.SignalExpressionPart.Intersection(Seq.Api.Model.Signals.SignalExpressionPart,Seq.Api.Model.Signals.SignalExpressionPart)">
            <summary>
            Create a <see cref="T:Seq.Api.Model.Signals.SignalExpressionPart"/> representing an intersection (<c>and</c> operation)
            of two signal expressions.
            </summary>
            <param name="left">The left side of the operation.</param>
            <param name="right">The right side of the operation.</param>
            <returns>The equivalent expression.</returns>
        </member>
        <member name="M:Seq.Api.Model.Signals.SignalExpressionPart.Union(Seq.Api.Model.Signals.SignalExpressionPart,Seq.Api.Model.Signals.SignalExpressionPart)">
            <summary>
            Create a <see cref="T:Seq.Api.Model.Signals.SignalExpressionPart"/> representing an union (<c>or</c> operation)
            of two signal expressions.
            </summary>
            <param name="left">The left side of the operation.</param>
            <param name="right">The right side of the operation.</param>
            <returns>The equivalent expression.</returns>
        </member>
        <member name="M:Seq.Api.Model.Signals.SignalExpressionPart.FromIntersectedIds(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Create a <see cref="T:Seq.Api.Model.Signals.SignalExpressionPart"/> representing an intersection (<c>and</c> operation)
            of multiple signals.
            </summary>
            <param name="intersectIds">The ids of the intersected signals.</param>
            <returns>The equivalent expression.</returns>
        </member>
        <member name="M:Seq.Api.Model.Signals.SignalExpressionPart.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Seq.Api.Model.Signals.SignalGrouping">
            <summary>
            The method by which a signal is grouped in the Seq UI.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Signals.SignalGrouping.Inferred">
            <summary>
            The grouping is inferred from the filters within the signal. Currently, this
            will result in the signal being grouped only if the signal has a single
            equality-based filter.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Signals.SignalGrouping.Explicit">
            <summary>
            The signal is given an explicit group name.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Signals.SignalGrouping.None">
            <summary>
            The signal is never displayed in a group.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.SqlQueries.SqlQueryEntity">
            <summary>
            A saved SQL-style query.
            </summary>
        </member>
        <member name="M:Seq.Api.Model.SqlQueries.SqlQueryEntity.#ctor">
            <summary>
            Construct a <see cref="T:Seq.Api.Model.SqlQueries.SqlQueryEntity"/>.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.SqlQueries.SqlQueryEntity.Title">
            <summary>
            A friendly, human-readable name for the query.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.SqlQueries.SqlQueryEntity.Description">
            <summary>
            A long-form description of the query.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.SqlQueries.SqlQueryEntity.Sql">
            <summary>
            The query text.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.SqlQueries.SqlQueryEntity.IsProtected">
            <summary>
            If <c>true</c>, only users with <see cref="F:Seq.Api.Model.Security.Permission.Setup"/> permission can edit the signal.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.SqlQueries.SqlQueryEntity.OwnerId">
            <summary>
            The id of a user who owns this query. If <c>null</c>, the query is shared.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Tasks.RunningTaskEntity">
            <summary>
            Describes a task being actively performed by the Seq server.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Tasks.RunningTaskEntity.Description">
            <summary>
            A description of the task.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Tasks.RunningTaskEntity.StartedAtUtc">
            <summary>
            When the task started.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Tasks.RunningTaskEntity.CanCancel">
            <summary>
            Whether or not the task can be cancelled.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Updates.AvailableUpdateEntity">
            <summary>
            An update available for software running on or in the Seq server.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Updates.AvailableUpdateEntity.Description">
            <summary>
            A description of the update.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Users.AuthProviderInfoPart">
            <summary>
            An authentication provider supported by the server.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Users.AuthProviderInfoPart.Name">
            <summary>
            The friendly, human-readable name of the authentication provider.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Users.AuthProviderInfoPart.Url">
            <summary>
            The URL where the user can log in with the provider.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Users.AuthProviderInfoPart.IsAlternative">
            <summary>
            If <c>true</c>, the provider is shown as an additional/alternative way to
            log in using the default provider.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Users.AuthProvidersPart">
            <summary>
            Auth providers supported by the server.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Users.AuthProvidersPart.Providers">
            <summary>
            The providers.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Users.CredentialsPart">
            <summary>
            User credentials.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Users.CredentialsPart.Username">
            <summary>
            The username.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Users.CredentialsPart.Password">
            <summary>
            The current password; set e.g. when logging in.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Users.CredentialsPart.NewPassword">
            <summary>
            A new password; set e.g. when changing passwords.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Users.SearchHistoryEntity">
            <summary>
            A user's search history.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Users.SearchHistoryEntity.RetainedRecentSearches">
            <summary>
            The number of recent searches that the server will retain for the user.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Users.SearchHistoryEntity.Recent">
            <summary>
            Recent un-pinned searches, with the most recent included first.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Users.SearchHistoryEntity.Pinned">
            <summary>
            Pinned search history items, with the most recent included first.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Users.SearchHistoryItemPart">
            <summary>
            A entry to include in a user's search history.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Users.SearchHistoryItemPart.Search">
            <summary>
            The filter entered by the user into the filter bar.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Users.SearchHistoryItemPart.Status">
            <summary>
            Status to apply to the search history item.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Users.SearchHistoryItemStatus">
            <summary>
            An operation applied to a search history item.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Users.SearchHistoryItemStatus.Used">
            <summary>
            The item was used (make it more recent).
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Users.SearchHistoryItemStatus.Pinned">
            <summary>
            The item has been pinned.
            </summary>
        </member>
        <member name="F:Seq.Api.Model.Users.SearchHistoryItemStatus.Forgotten">
            <summary>
            The item has been un-pinned.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Users.UserEntity">
            <summary>
            A user on the Seq server.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Users.UserEntity.Username">
            <summary>
            The username that uniquely identifies the user.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Users.UserEntity.DisplayName">
            <summary>
            An optional display name to aid in identifying the user.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Users.UserEntity.EmailAddress">
            <summary>
            The user's email address. This will be used to show a
            Gravatar for the user in some situations.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Users.UserEntity.Preferences">
            <summary>
            The user's preferences.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Users.UserEntity.NewPassword">
            <summary>
            If changing password, the new password for the user.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Users.UserEntity.ViewFilter">
            <summary>
            A filter that is applied to searches and queries instigated by
            the user.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Users.UserEntity.MustChangePassword">
            <summary>
            If <c>true</c>, the user will be unable to log in without first
            changing their password. Recommended when administratively assigning
            a password for the user.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Users.UserEntity.RoleIds">
            <summary>
            The ids of one or more roles that grant permissions to the user. Note that
            the Seq UI currently only supports a single role when editing users.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Users.UserEntity.AuthenticationProvider">
            <summary>
            The authentication provider associated with the user account. This will normally be
            the system-configured authentication provider, but if the provider is changed, the
            user may need to be unlinked from an existing provider so that login can proceed through
            the new provider.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Users.UserEntity.AuthenticationProviderUniqueIdentifier">
            <summary>
            The unique identifier that links the identity provided by the authentication provider
            with the Seq user.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Workspaces.WorkspaceContentPart">
            <summary>
            The items included in a <see cref="T:Seq.Api.Model.Workspaces.WorkspaceEntity"/>.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Workspaces.WorkspaceContentPart.SignalIds">
            <summary>
            A list of <see cref="T:Seq.Api.Model.Signals.SignalEntity"/> ids to include in the workspace.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Workspaces.WorkspaceContentPart.QueryIds">
            <summary>
            A list of <see cref="T:Seq.Api.Model.SqlQueries.SqlQueryEntity"/> ids to include in the workspace.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Workspaces.WorkspaceContentPart.DashboardIds">
            <summary>
            A list of <see cref="T:Seq.Api.Model.Monitoring.DashboardEntity"/> ids to include in the workspace.
            </summary>
        </member>
        <member name="T:Seq.Api.Model.Workspaces.WorkspaceEntity">
            <summary>
            A workspace is a collection of related entities that help to focus
            the Seq UI around a particular context.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Workspaces.WorkspaceEntity.Title">
            <summary>
            A friendly, human-readable title for the workspace.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Workspaces.WorkspaceEntity.Description">
            <summary>
            A long-form description of the workspace.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Workspaces.WorkspaceEntity.OwnerId">
            <summary>
            The id of the user who owns the workspace. If <c>null</c>, the workspace is shared.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Workspaces.WorkspaceEntity.IsProtected">
            <summary>
            If <c>true</c>, only users with the <see cref="F:Seq.Api.Model.Security.Permission.Setup"/> permission can modify the workspace.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Workspaces.WorkspaceEntity.DefaultSignalExpression">
            <summary>
            An optional <see cref="T:Seq.Api.Model.Signals.SignalExpressionPart"/> that will be activated when opening the <em>Events</em>
            screen with the workspace selected.
            </summary>
        </member>
        <member name="P:Seq.Api.Model.Workspaces.WorkspaceEntity.Content">
            <summary>
            Content included in the workspace.
            </summary>
        </member>
        <member name="T:Seq.Api.ResourceGroups.AlertStateResourceGroup">
            <summary>
            Inspect the current states of alerts being monitored by the server.
            </summary>
        </member>
        <member name="M:Seq.Api.ResourceGroups.AlertStateResourceGroup.FindAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the alert state with the given id; throws if the entity does not exist.
            </summary>
            <param name="id">The id of the alert state.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The alert state.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.AlertStateResourceGroup.ListAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieve the states of all alerts being monitored by the server.
            </summary>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A list containing all current alert states.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.AlertStateResourceGroup.RemoveAsync(Seq.Api.Model.Monitoring.AlertStateEntity,System.Threading.CancellationToken)">
            <summary>
            Remove an alert state; this will remove the corresponding alert.
            </summary>
            <param name="entity">The alert state to remove</param>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
        </member>
        <member name="T:Seq.Api.ResourceGroups.ApiKeysResourceGroup">
            <summary>
            Perform actions on API keys. API keys can be used to authenticate and identify log event sources, and for
            users to delegate some or all permissions to a client of the Seq API (app or integration) without exposing
            user credentials.
            </summary>
        </member>
        <member name="M:Seq.Api.ResourceGroups.ApiKeysResourceGroup.FindAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the API key with the given id; throws if the entity does not exist.
            </summary>
            <param name="id">The id of the API key.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The API key.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.ApiKeysResourceGroup.ListAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Retrieve API keys.
            </summary>
            <param name="ownerId">If the id of a <see cref="T:Seq.Api.Model.Users.UserEntity"/> is provided, only API keys owned by them will be included in the result; if
            not specified, personal API keys for all owners will be listed.</param>
            <param name="shared">If <c>true</c>, shared API keys will be included in the result.</param>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A list containing matching API keys.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.ApiKeysResourceGroup.TemplateAsync(System.Threading.CancellationToken)">
            <summary>
            Construct an API key with server defaults pre-initialized.
            </summary>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The unsaved API key.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.ApiKeysResourceGroup.AddAsync(Seq.Api.Model.Inputs.ApiKeyEntity,System.Threading.CancellationToken)">
            <summary>
            Add a new API key.
            </summary>
            <param name="entity">The API key to add.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The API key, with server-allocated properties, such as <see cref="P:Seq.Api.Model.Inputs.ApiKeyEntity.Token"/> (if server-allocated),
            and <see cref="P:Seq.Api.Model.Entity.Id"/>, initialized.</returns>
            <remarks>Leaving the token blank will cause the server to generate a cryptographically random API key token. After creation, the first
            few characters of the token will be readable from <see cref="P:Seq.Api.Model.Inputs.ApiKeyEntity.TokenPrefix"/>, but because only a cryptographically-secure
            hash of the token is stored internally, the token itself cannot be retrieved.</remarks>
        </member>
        <member name="M:Seq.Api.ResourceGroups.ApiKeysResourceGroup.RemoveAsync(Seq.Api.Model.Inputs.ApiKeyEntity,System.Threading.CancellationToken)">
            <summary>
            Remove an existing API key.
            </summary>
            <param name="entity">The API key to remove.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A task indicating completion.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.ApiKeysResourceGroup.UpdateAsync(Seq.Api.Model.Inputs.ApiKeyEntity,System.Threading.CancellationToken)">
            <summary>
            Update an existing API key.
            </summary>
            <param name="entity">The API key to update.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A task indicating completion.</returns>
            <remarks>The API key token itself cannot be updated using this method.</remarks>
        </member>
        <member name="M:Seq.Api.ResourceGroups.ApiKeysResourceGroup.GetMeasurementTimeseriesAsync(Seq.Api.Model.Inputs.ApiKeyEntity,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a detailed metric for the API key.
            </summary>
            <param name="entity">The API key to retrieve metrics for.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <param name="measurement">The measurement to get.</param>
            <returns></returns>
        </member>
        <member name="T:Seq.Api.ResourceGroups.ApiResourceGroup">
            <summary>
            Base class for resource groups representing portions of the Seq API. These wrap an underlying
            <see cref="T:Seq.Api.Model.ResourceGroup"/> described in the API metadata at <c>/api/{resourceGroup}/resources</c>.
            </summary>
        </member>
        <member name="P:Seq.Api.ResourceGroups.ApiResourceGroup.Client">
            <summary>
            The API client used to access the API.
            </summary>
        </member>
        <member name="M:Seq.Api.ResourceGroups.ApiResourceGroup.LoadGroupAsync(System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.ApiResourceGroup.GroupGetAsync``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Get an entity.
            </summary>
            <typeparam name="TEntity">The entity type being operated upon.</typeparam>
            <param name="link">The name of a link (or link template) included in the entity's link collection.</param>
            <param name="parameters">Parameters that will be substituted into the operation's link template.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The entity.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.ApiResourceGroup.GroupGetStringAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Get a linked resource as a string.
            </summary>
            <param name="link">The name of a link (or link template) included in the entity's link collection.</param>
            <param name="parameters">Parameters that will be substituted into the operation's link template.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The string.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.ApiResourceGroup.GroupListAsync``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            List entities.
            </summary>
            <typeparam name="TEntity">The entity type being operated upon.</typeparam>
            <param name="link">The name of a link (or link template) included in the entity's link collection.</param>
            <param name="parameters">Parameters that will be substituted into the operation's link template.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The resulting entities.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.ApiResourceGroup.GroupPostAsync``1(System.String,``0,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Post/create an entity.
            </summary>
            <typeparam name="TEntity">The entity type being operated upon.</typeparam>
            <param name="link">The name of a link (or link template) included in the entity's link collection.</param>
            <param name="content">The content included in the operation.</param>
            <param name="parameters">Parameters that will be substituted into the operation's link template.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A task indicating completion.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.ApiResourceGroup.GroupPostReadStringAsync``1(System.String,``0,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Post/create an entity and read the response as a string.
            </summary>
            <typeparam name="TEntity">The entity type being operated upon.</typeparam>
            <param name="link">The name of a link (or link template) included in the entity's link collection.</param>
            <param name="content">The content included in the operation.</param>
            <param name="parameters">Parameters that will be substituted into the operation's link template.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The response string.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.ApiResourceGroup.GroupPostReadBytesAsync``1(System.String,``0,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Post/create an entity and read the response as a stream.
            </summary>
            <typeparam name="TEntity">The entity type being operated upon.</typeparam>
            <param name="link">The name of a link (or link template) included in the entity's link collection.</param>
            <param name="content">The content included in the operation.</param>
            <param name="parameters">Parameters that will be substituted into the operation's link template.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The response stream.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.ApiResourceGroup.GroupPostAsync``2(System.String,``0,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Post/create an entity.
            </summary>
            <typeparam name="TEntity">The entity type being operated upon.</typeparam>
            <typeparam name="TResponse">The response type of the operation.</typeparam>
            <param name="link">The name of a link (or link template) included in the entity's link collection.</param>
            <param name="content">The content included in the operation.</param>
            <param name="parameters">Parameters that will be substituted into the operation's link template.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The response type.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.ApiResourceGroup.GroupPutAsync``1(System.String,``0,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Update an entity.
            </summary>
            <typeparam name="TEntity">The entity type being operated upon.</typeparam>
            <param name="link">The name of a link (or link template) included in the entity's link collection.</param>
            <param name="content">The content included in the operation.</param>
            <param name="parameters">Parameters that will be substituted into the operation's link template.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A task indicating completion.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.ApiResourceGroup.GroupDeleteAsync``1(System.String,``0,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Delete an entity.
            </summary>
            <typeparam name="TEntity">The entity type being operated upon.</typeparam>
            <param name="link">The name of a link (or link template) included in the entity's link collection.</param>
            <param name="content">The content included in the operation.</param>
            <param name="parameters">Parameters that will be substituted into the operation's link template.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A task indicating completion.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.ApiResourceGroup.GroupDeleteAsync``2(System.String,``0,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Delete an entity.
            </summary>
            <typeparam name="TEntity">The entity type being operated upon.</typeparam>
            <typeparam name="TResponse">The response type of the operation.</typeparam>
            <param name="link">The name of a link (or link template) included in the entity's link collection.</param>
            <param name="content">The content included in the operation.</param>
            <param name="parameters">Parameters that will be substituted into the operation's link template.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The response type.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.ApiResourceGroup.GetLink``1(``0,System.String,System.String)">
            <summary>
            Get a URI from an entity's link collection.
            </summary>
            <typeparam name="TEntity">The entity type being operated upon.</typeparam>
            <param name="entity"></param>
            <param name="link">The name of a link (or link template) included in the entity's link collection.</param>
            <param name="orElse">A default URI to use when no link with the given name is present.</param>
            <returns>The link.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.ApiResourceGroup.GroupCreateAsync``2(``0,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Create an entity.
            </summary>
            <typeparam name="TEntity">The entity type being operated upon.</typeparam>
            <typeparam name="TResponse">The response type of the operation.</typeparam>
            <param name="entity"></param>
            <param name="parameters">Parameters that will be substituted into the operation's link template.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Seq.Api.ResourceGroups.AppInstancesResourceGroup">
            <summary>
            Perform operations on app instances. App instances are individual processes based on a running <see cref="T:Seq.Api.Model.Apps.AppEntity"/> that can
            read from and write to the Seq event stream.
            </summary>
        </member>
        <member name="M:Seq.Api.ResourceGroups.AppInstancesResourceGroup.FindAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the app instance with the given id; throws if the entity does not exist.
            </summary>
            <param name="id">The id of the app instance.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The app instance.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.AppInstancesResourceGroup.ListAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieve app instances.
            </summary>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A list containing matching app instances.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.AppInstancesResourceGroup.TemplateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Construct an app instance with appropriate app settings and server defaults pre-initialized.
            </summary>
            <param name="appId">The id of the <see cref="T:Seq.Api.Model.Apps.AppEntity"/> to create an instance of.</param>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The unsaved app instance.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.AppInstancesResourceGroup.AddAsync(Seq.Api.Model.AppInstances.AppInstanceEntity,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Add a new app instance.
            </summary>
            <param name="entity">The app instance to add.</param>
            <param name="runOnExisting">If <c>true</c>, events already on the server will be sent to the app. Note that this requires disk buffering and persistent bookmarks
            for the app, which is not recommended for performance reasons.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The app instance, with server-allocated properties such as <see cref="P:Seq.Api.Model.Entity.Id"/> initialized.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.AppInstancesResourceGroup.RemoveAsync(Seq.Api.Model.AppInstances.AppInstanceEntity,System.Threading.CancellationToken)">
            <summary>
            Remove an existing app instance.
            </summary>
            <param name="entity">The app instance to remove.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A task indicating completion.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.AppInstancesResourceGroup.UpdateAsync(Seq.Api.Model.AppInstances.AppInstanceEntity,System.Threading.CancellationToken)">
            <summary>
            Update an existing app instance.
            </summary>
            <param name="entity">The app instance to update.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A task indicating completion.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.AppInstancesResourceGroup.InvokeAsync(Seq.Api.Model.AppInstances.AppInstanceEntity,System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Send the event with id <paramref name="eventId"/> to the app instance <paramref name="entity"/>.
            </summary>
            <param name="entity">The app instance to invoke.</param>
            <param name="eventId">The id of an event to send to the app.</param>
            <param name="settingOverrides">Values for any overridable settings exposed by the app instance.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A task indicating completion.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.AppInstancesResourceGroup.GetMeasurementTimeseriesAsync(Seq.Api.Model.AppInstances.AppInstanceEntity,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a detailed metric for the app instance.
            </summary>
            <param name="entity">The app instance to retrieve metrics for.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <param name="measurement">The measurement to get.</param>
            <returns></returns>
        </member>
        <member name="T:Seq.Api.ResourceGroups.AppsResourceGroup">
            <summary>
            Perform operations on Seq apps. Seq apps are executable plug-ins that read from and write to the Seq event stream.
            </summary>
        </member>
        <member name="M:Seq.Api.ResourceGroups.AppsResourceGroup.FindAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the app with the given id; throws if the entity does not exist.
            </summary>
            <param name="id">The id of the app.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The app.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.AppsResourceGroup.ListAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieve apps.
            </summary>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A list containing matching apps.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.AppsResourceGroup.TemplateAsync(System.Threading.CancellationToken)">
            <summary>
            Construct an app with server defaults pre-initialized.
            </summary>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The unsaved app.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.AppsResourceGroup.AddAsync(Seq.Api.Model.Apps.AppEntity,System.Threading.CancellationToken)">
            <summary>
            Add a new app.
            </summary>
            <param name="entity">The app to add.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The app, with server-allocated properties such as <see cref="P:Seq.Api.Model.Entity.Id"/> initialized.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.AppsResourceGroup.RemoveAsync(Seq.Api.Model.Apps.AppEntity,System.Threading.CancellationToken)">
            <summary>
            Remove an existing app.
            </summary>
            <param name="entity">The app to remove.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A task indicating completion.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.AppsResourceGroup.UpdateAsync(Seq.Api.Model.Apps.AppEntity,System.Threading.CancellationToken)">
            <summary>
            Update an existing app.
            </summary>
            <param name="entity">The app to update.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A task indicating completion.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.AppsResourceGroup.InstallPackageAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a new app by installing a NuGet package.
            </summary>
            <param name="feedId">The feed from which to retrieve the package.</param>
            <param name="packageId">The package id, for example <c>Seq.App.JsonArchive</c>.</param>
            <param name="version">The version of the package to install. If <c>null</c>, the latest version of the package will be installed.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The resulting app.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.AppsResourceGroup.UpdatePackageAsync(Seq.Api.Model.Apps.AppEntity,System.String,System.Boolean)">
            <summary>
            Update the underlying package for app <paramref name="entity"/>.
            </summary>
            <param name="entity">The app to update the package for.</param>
            <param name="version">The version to update to; if <c>null</c>, the latest available version in the feed will be used.</param>
            <param name="force">If <c>true</c>, update the app package even if the same version is already installed.</param>
            <returns>The app with updated package information.</returns>
        </member>
        <member name="T:Seq.Api.ResourceGroups.BackupsResourceGroup">
            <summary>
            Perform operations on backups. Seq backups include metadata like users, signals, API keys and other configuration, but do not include
            the event stream. Backups are fully encrypted with AES-256 and cannot be restored without the secret key from the originating Seq instance.
            </summary>
        </member>
        <member name="M:Seq.Api.ResourceGroups.BackupsResourceGroup.FindAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the backup with the given id; throws if the entity does not exist.
            </summary>
            <param name="id">The id of the backup.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The backup.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.BackupsResourceGroup.ListAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieve backups.
            </summary>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A list containing matching backups.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.BackupsResourceGroup.DownloadImmediateAsync(System.Threading.CancellationToken)">
            <summary>
            Download a backup with the current state of the server. Note that the backup will not be stored server-side.
            </summary>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The <c>.seqbak</c> backup file.</returns>
        </member>
        <member name="T:Seq.Api.ResourceGroups.DashboardsResourceGroup">
            <summary>
            Perform operations on dashboards. Dashboards are collections of charts and alerts that are either shared or user-specific.
            </summary>
        </member>
        <member name="M:Seq.Api.ResourceGroups.DashboardsResourceGroup.FindAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the dashboard with the given id; throws if the entity does not exist.
            </summary>
            <param name="id">The id of the dashboard.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The dashboard.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.DashboardsResourceGroup.ListAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Retrieve dashboards.
            </summary>
            <param name="ownerId">If the id of a <see cref="T:Seq.Api.Model.Users.UserEntity"/> is provided, only dashboards owned by them will be included in the result; if
            not specified, personal dashboards for all owners will be listed.</param>
            <param name="shared">If <c>true</c>, shared dashboards will be included in the result.</param>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A list containing matching dashboards.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.DashboardsResourceGroup.TemplateAsync(System.Threading.CancellationToken)">
            <summary>
            Construct a dashboard with server defaults pre-initialized.
            </summary>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The unsaved dashboard.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.DashboardsResourceGroup.AddAsync(Seq.Api.Model.Monitoring.DashboardEntity,System.Threading.CancellationToken)">
            <summary>
            Add a new dashboard.
            </summary>
            <param name="entity">The dashboard to add.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The dashboard, with server-allocated properties such as <see cref="P:Seq.Api.Model.Entity.Id"/> initialized.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.DashboardsResourceGroup.RemoveAsync(Seq.Api.Model.Monitoring.DashboardEntity,System.Threading.CancellationToken)">
            <summary>
            Remove an existing dashboard.
            </summary>
            <param name="entity">The dashboard to remove.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A task indicating completion.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.DashboardsResourceGroup.UpdateAsync(Seq.Api.Model.Monitoring.DashboardEntity,System.Threading.CancellationToken)">
            <summary>
            Update an existing dashboard.
            </summary>
            <param name="entity">The dashboard to update.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A task indicating completion.</returns>
        </member>
        <member name="T:Seq.Api.ResourceGroups.DataResourceGroup">
            <summary>
            Execute SQL-style queries against the API.
            </summary>
        </member>
        <member name="M:Seq.Api.ResourceGroups.DataResourceGroup.QueryAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},Seq.Api.Model.Signals.SignalExpressionPart,Seq.Api.Model.Signals.SignalEntity,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
            <summary>
            Execute an SQL query and retrieve the result set as a structured <see cref="T:Seq.Api.Model.Data.QueryResultPart"/>.
            </summary>
            <param name="query">The query to execute.</param>
            <param name="rangeStartUtc">The earliest timestamp from which to include events in the query result.</param>
            <param name="rangeEndUtc">The exclusive latest timestamp to which events are included in the query result. The default is the current time.</param>
            <param name="signal">A signal expression over which the query will be executed.</param>
            <param name="unsavedSignal">A constructed signal that may not appear on the server, for example, a <see cref="T:Seq.Api.Model.Signals.SignalEntity"/> that has been
            created but not saved, a signal from another server, or the modified representation of an entity already persisted.</param>
            <param name="timeout">The query timeout; if not specified, the query will run until completion.</param>
            <param name="cancellationToken">Token through which the operation can be cancelled.</param>
            <returns>A structured result set.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.DataResourceGroup.QueryCsvAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},Seq.Api.Model.Signals.SignalExpressionPart,Seq.Api.Model.Signals.SignalEntity,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
            <summary>
            Execute an SQL query and retrieve the result set as a structured <see cref="T:Seq.Api.Model.Data.QueryResultPart"/>.
            </summary>
            <param name="query">The query to execute.</param>
            <param name="rangeStartUtc">The earliest timestamp from which to include events in the query result.</param>
            <param name="rangeEndUtc">The exclusive latest timestamp to which events are included in the query result. The default is the current time.</param>
            <param name="signal">A signal expression over which the query will be executed.</param>
            <param name="unsavedSignal">A constructed signal that may not appear on the server, for example, a <see cref="T:Seq.Api.Model.Signals.SignalEntity"/> that has been
            created but not saved, a signal from another server, or the modified representation of an entity already persisted.</param>
            <param name="timeout">The query timeout; if not specified, the query will run until completion.</param>
            <param name="cancellationToken">Token through which the operation can be cancelled.</param>
            <returns>A CSV result set.</returns>
        </member>
        <member name="T:Seq.Api.ResourceGroups.DiagnosticsResourceGroup">
            <summary>
            Access server diagnostics.
            </summary>
        </member>
        <member name="M:Seq.Api.ResourceGroups.DiagnosticsResourceGroup.GetServerMetricsAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieve the current server metrics, including memory usage, ingestion rates, disk consumption, etc.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>Current server metrics.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.DiagnosticsResourceGroup.GetServerStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieve status messages describing the state of the server.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>Status messages.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.DiagnosticsResourceGroup.GetIngestionLogAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieve the server ingestion log, including information about failed event ingestion.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The server ingestion log.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.DiagnosticsResourceGroup.GetMeasurementTimeseriesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a detailed system metric.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <param name="measurement">The measurement to get.</param>
            <returns>A timeseries showing the measurement over time.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.DiagnosticsResourceGroup.GetStorageConsumptionAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Report on storage space consumed by the event store across a range of timestamps. The returned range may be
            extended to account for the resolution of the underlying data.
            </summary>
            <param name="rangeStart">The (inclusive) start of the range to report on. If omitted, the results will report from the
            earliest stored data. The range start must land on a five-minute boundary.</param>
            <param name="rangeEnd">The (exclusive) end of the range to report on. If omitted, the results will report from the
            earliest stored data. The range must be a multiple of the interval size, or a whole number of days if
            no interval is specified.</param>
            <param name="intervalMinutes">The bucket size to use. Must be a multiple of 5 minutes. Defaults to 1440 (one day).</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>Storage consumption information.</returns>
        </member>
        <member name="T:Seq.Api.ResourceGroups.EventsResourceGroup">
            <summary>
            Read and subscribe to events from the event store.
            </summary>
        </member>
        <member name="M:Seq.Api.ResourceGroups.EventsResourceGroup.FindAsync(System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>Find an event, given its id.</summary>
            <param name="id">The id of the event to retrieve.</param>
            <param name="render">If specified, the event's message template and properties will be rendered into its RenderedMessage property.</param>
            <param name="permalinkId">If the request is for a permalinked event, specifying the id of the permalink here will
            allow events that have otherwise been deleted to be found. The special value `"unknown"` provides backwards compatibility
            with versions prior to 5.0, which did not mark permalinks explicitly.</param>
            <param name="cancellationToken">Token through which the operation can be cancelled.</param>
            <returns>The event.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.EventsResourceGroup.ListAsync(Seq.Api.Model.Signals.SignalExpressionPart,System.String,System.Int32,System.String,System.String,System.Boolean,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a list of events that match a set of conditions. The complete result is buffered into memory,
            so if a large result set is expected, use InSignalAsync() and lastReadEventId to page the results.
            </summary>
            <param name="signal">If provided, a signal expression describing the set of events that will be filtered for the result.</param>
            <param name="filter">A strict Seq filter expression to match (text expressions must be in double quotes). To
            convert a "fuzzy" filter into a strict one the way the Seq UI does, use connection.Expressions.ToStrictAsync().</param>
            <param name="count">The number of events to retrieve. If not specified will default to 30.</param>
            <param name="startAtId">An event id from which to start searching (inclusively).</param>
            <param name="afterId">An event id to search after (exclusively).</param>
            <param name="render">If specified, the event's message template and properties will be rendered into its RenderedMessage property.</param>
            <param name="fromDateUtc">Earliest (inclusive) date/time from which to search.</param>
            <param name="toDateUtc">Latest (exclusive) date/time from which to search.</param>
            <param name="shortCircuitAfter">If specified, the number of events after the first match to keep searching before a partial
            result set is returned. Used to improve responsiveness when the result is displayed in a user interface, not typically used in
            batch processing scenarios.</param>
            <param name="permalinkId">If the request is for a permalinked event, specifying the id of the permalink here will
            allow events that have otherwise been deleted to be found. The special value `"unknown"` provides backwards compatibility
            with versions prior to 5.0, which did not mark permalinks explicitly.</param>
            <param name="cancellationToken">Token through which the operation can be cancelled.</param>
            <returns>The complete list of events, ordered from least to most recent.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.EventsResourceGroup.InSignalAsync(Seq.Api.Model.Signals.SignalEntity,Seq.Api.Model.Signals.SignalExpressionPart,System.String,System.Int32,System.String,System.String,System.Boolean,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a list of events that match a set of conditions. The complete result is buffered into memory,
            so if a large result set is expected, use InSignalAsync() and lastReadEventId to page the results.
            </summary>
            <param name="unsavedSignal">A constructed signal that may not appear on the server, for example, a <see cref="T:Seq.Api.Model.Signals.SignalEntity"/> that has been
            created but not saved, a signal from another server, or the modified representation of an entity already persisted.</param>
            <param name="signal">If provided, a signal expression describing the set of events that will be filtered for the result.</param>
            <param name="filter">A strict Seq filter expression to match (text expressions must be in double quotes). To
            convert a "fuzzy" filter into a strict one the way the Seq UI does, use connection.Expressions.ToStrictAsync().</param>
            <param name="count">The number of events to retrieve. If not specified will default to 30.</param>
            <param name="startAtId">An event id from which to start searching (inclusively).</param>
            <param name="afterId">An event id to search after (exclusively).</param>
            <param name="render">If specified, the event's message template and properties will be rendered into its RenderedMessage property.</param>
            <param name="fromDateUtc">Earliest (inclusive) date/time from which to search.</param>
            <param name="toDateUtc">Latest (exclusive) date/time from which to search.</param>
            <param name="shortCircuitAfter">If specified, the number of events after the first match to keep searching before a partial
            result set is returned. Used to improve responsiveness when the result is displayed in a user interface, not typically used in
            batch processing scenarios.</param>
            <param name="permalinkId">If the request is for a permalinked event, specifying the id of the permalink here will
            allow events that have otherwise been deleted to be found. The special value `"unknown"` provides backwards compatibility
            with versions prior to 5.0, which did not mark permalinks explicitly.</param>
            <param name="cancellationToken">Token through which the operation can be cancelled.</param>
            <returns>The complete list of events, ordered from least to most recent.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.EventsResourceGroup.InSignalAsync(Seq.Api.Model.Signals.SignalExpressionPart,System.String,System.Int32,System.String,System.String,System.Boolean,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a list of events that match a set of conditions. The complete result is buffered into memory,
            so if a large result set is expected, use InSignalAsync() and lastReadEventId to page the results.
            </summary>
            <param name="signal">If provided, a signal expression describing the set of events that will be filtered for the result.</param>
            <param name="filter">A strict Seq filter expression to match (text expressions must be in double quotes). To
            convert a "fuzzy" filter into a strict one the way the Seq UI does, use connection.Expressions.ToStrictAsync().</param>
            <param name="count">The number of events to retrieve. If not specified will default to 30.</param>
            <param name="startAtId">An event id from which to start searching (inclusively).</param>
            <param name="afterId">An event id to search after (exclusively).</param>
            <param name="render">If specified, the event's message template and properties will be rendered into its RenderedMessage property.</param>
            <param name="fromDateUtc">Earliest (inclusive) date/time from which to search.</param>
            <param name="toDateUtc">Latest (exclusive) date/time from which to search.</param>
            <param name="shortCircuitAfter">If specified, the number of events after the first match to keep searching before a partial
            result set is returned. Used to improve responsiveness when the result is displayed in a user interface, not typically used in
            batch processing scenarios.</param>
            <param name="permalinkId">If the request is for a permalinked event, specifying the id of the permalink here will
            allow events that have otherwise been deleted to be found. The special value `"unknown"` provides backwards compatibility
            with versions prior to 5.0, which did not mark permalinks explicitly.</param>
            <param name="cancellationToken">Token through which the operation can be cancelled.</param>
            <returns>The complete list of events, ordered from least to most recent.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.EventsResourceGroup.DeleteInSignalAsync(Seq.Api.Model.Signals.SignalEntity,Seq.Api.Model.Signals.SignalExpressionPart,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Delete matching events from the stream.
            </summary>
            <param name="unsavedSignal">A constructed signal that may not appear on the server, for example, a <see cref="T:Seq.Api.Model.Signals.SignalEntity"/> that has been
            created but not saved, a signal from another server, or the modified representation of an entity already persisted.</param>
            <param name="signal">If provided, a signal expression describing the set of events that will be filtered for the result.</param>
            <param name="filter">A strict Seq filter expression to match (text expressions must be in double quotes). To
            convert a "fuzzy" filter into a strict one the way the Seq UI does, use connection.Expressions.ToStrictAsync().</param>
            <param name="fromDateUtc">Earliest (inclusive) date/time from which to delete.</param>
            <param name="toDateUtc">Latest (exclusive) date/time from which to delete.</param>
            <param name="cancellationToken">Token through which the operation can be cancelled.</param>
            <returns>A result carrying the count of events deleted.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.EventsResourceGroup.StreamAsync``1(Seq.Api.Model.Signals.SignalExpressionPart,System.String,System.Threading.CancellationToken)">
            <summary>
            Connect to the live event stream, read as strongly-typed objects. Dispose the resulting stream to disconnect.
            </summary>
            <typeparam name="T">The type into which events should be deserialized.</typeparam>
            <param name="signal">If provided, a signal expression describing the set of events that will be filtered for the result.</param>
            <param name="filter">A strict Seq filter expression to match (text expressions must be in double quotes). To
            convert a "fuzzy" filter into a strict one the way the Seq UI does, use connection.Expressions.ToStrictAsync().</param>
            <param name="cancellationToken">Token through which the operation can be cancelled.</param>
            <returns>An observable that will stream events from the server to subscribers. Events will be buffered server-side until the first
            subscriber connects, ensure at least one subscription is made in order to avoid event loss.</returns>
            <remarks>See <a href="https://docs.datalust.co/docs/posting-raw-events#section-compact-json-format">the Seq ingestion
            docs</a> for event schema information.</remarks>
        </member>
        <member name="M:Seq.Api.ResourceGroups.EventsResourceGroup.StreamDocumentsAsync(Seq.Api.Model.Signals.SignalExpressionPart,System.String,System.Threading.CancellationToken)">
            <summary>
            Connect to the live event stream, read as raw JSON documents. Dispose the resulting stream to disconnect.
            </summary>
            <param name="signal">If provided, a signal expression describing the set of events that will be filtered for the result.</param>
            <param name="filter">A strict Seq filter expression to match (text expressions must be in double quotes). To
            convert a "fuzzy" filter into a strict one the way the Seq UI does, use connection.Expressions.ToStrictAsync().</param>
            <param name="cancellationToken">Token through which the operation can be cancelled.</param>
            <returns>An observable that will stream events from the server to subscribers. Events will be buffered server-side until the first
            subscriber connects, ensure at least one subscription is made in order to avoid event loss.</returns>
            <remarks>See <a href="https://docs.datalust.co/docs/posting-raw-events#section-compact-json-format">the Seq ingestion
            docs</a> for event schema information.</remarks>
        </member>
        <member name="T:Seq.Api.ResourceGroups.ExpressionsResourceGroup">
            <summary>
            Perform operations on queries and filter expressions.
            </summary>
        </member>
        <member name="M:Seq.Api.ResourceGroups.ExpressionsResourceGroup.ToStrictAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Convert an expression in the relaxed syntax supported by the filter bar, to the strictly-valid
            syntax required by API interactions.
            </summary>
            <param name="fuzzy">The (potentially) relaxed-syntax expression.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The expression in a strictly-valid form.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.ExpressionsResourceGroup.ToSqlAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Convert an expression in the relaxed syntax supported by the filter bar, to the strict and limited
            syntax required within SQL queries.
            </summary>
            <param name="fuzzy">The (potentially) relaxed-syntax expression.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The expression in a form that can be used within SQL queries.</returns>
        </member>
        <member name="T:Seq.Api.ResourceGroups.FeedsResourceGroup">
            <summary>
            Perform operations on NuGet feeds.
            </summary>
        </member>
        <member name="M:Seq.Api.ResourceGroups.FeedsResourceGroup.FindAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the feed with the given id; throws if the entity does not exist.
            </summary>
            <param name="id">The id of the feed.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The feed.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.FeedsResourceGroup.ListAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieve feeds.
            </summary>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A list containing matching feeds.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.FeedsResourceGroup.TemplateAsync(System.Threading.CancellationToken)">
            <summary>
            Construct a feed with server defaults pre-initialized.
            </summary>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The unsaved feed.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.FeedsResourceGroup.AddAsync(Seq.Api.Model.Feeds.NuGetFeedEntity,System.Threading.CancellationToken)">
            <summary>
            Add a new feed.
            </summary>
            <param name="entity">The feed to add.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The feed, with server-allocated properties such as <see cref="P:Seq.Api.Model.Entity.Id"/> initialized.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.FeedsResourceGroup.RemoveAsync(Seq.Api.Model.Feeds.NuGetFeedEntity,System.Threading.CancellationToken)">
            <summary>
            Remove an existing feed.
            </summary>
            <param name="entity">The feed to remove.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A task indicating completion.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.FeedsResourceGroup.UpdateAsync(Seq.Api.Model.Feeds.NuGetFeedEntity,System.Threading.CancellationToken)">
            <summary>
            Update an existing feed.
            </summary>
            <param name="entity">The feed to update.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A task indicating completion.</returns>
        </member>
        <member name="T:Seq.Api.ResourceGroups.LicensesResourceGroup">
            <summary>
            Perform operations on the Seq license certificate.
            </summary>
        </member>
        <member name="M:Seq.Api.ResourceGroups.LicensesResourceGroup.FindAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the license with the given id; throws if the entity does not exist.
            </summary>
            <param name="id">The id of the license.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The license.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.LicensesResourceGroup.FindCurrentAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieve the license being used by the server.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The license.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.LicensesResourceGroup.ListAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieve licenses.
            </summary>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A list containing matching licenses.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.LicensesResourceGroup.UpdateAsync(Seq.Api.Model.License.LicenseEntity,System.Threading.CancellationToken)">
            <summary>
            Update an existing license.
            </summary>
            <param name="entity">The license to update.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A task indicating completion.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.LicensesResourceGroup.DowngradeAsync(System.Threading.CancellationToken)">
            <summary>
            Remove the current license, causing the server to fall back to the default configuration.
            </summary>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A task indicating completion.</returns>
        </member>
        <member name="T:Seq.Api.ResourceGroups.PermalinksResourceGroup">
            <summary>
            Perform operations on permalinked events.
            </summary>
        </member>
        <member name="M:Seq.Api.ResourceGroups.PermalinksResourceGroup.FindAsync(System.String,System.Boolean,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Retrieve the permalink with the given id; throws if the entity does not exist.
            </summary>
            <param name="id">The id of the permalink.</param>
            <param name="renderEvent">If <c>true</c> and <paramref name="includeEvent"/> is <c>true</c>, then the rendered message will be included in the event; otherwise, event
            information will include the message template only.</param>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <param name="includeEvent">If <c>true</c>, the event payload will be returned along with permalink metadata; otherwise, only metadata will be returned.</param>
            <returns>The permalink.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.PermalinksResourceGroup.ListAsync(System.String,System.Boolean,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Retrieve permalinks.
            </summary>
            <param name="ownerId">If the id of a <see cref="T:Seq.Api.Model.Users.UserEntity"/> is provided, only permalinks owned by them will be included in the result; if
            not specified, permalinks for all owners will be listed.</param>
            <param name="renderEvent">If <c>true</c> and <paramref name="includeEvent"/> is <c>true</c>, then the rendered message will be included in the event; otherwise, event
            information will include the message template only.</param>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <param name="includeEvent">If <c>true</c>, the event payload will be returned along with permalink metadata; otherwise, only metadata will be returned.</param>
            <returns>A list containing matching permalinks.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.PermalinksResourceGroup.TemplateAsync(System.Threading.CancellationToken)">
            <summary>
            Construct a permalink with server defaults pre-initialized.
            </summary>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The unsaved permalink.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.PermalinksResourceGroup.AddAsync(Seq.Api.Model.Permalinks.PermalinkEntity,System.Threading.CancellationToken)">
            <summary>
            Add a new permalink.
            </summary>
            <param name="entity">The permalink to add.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The permalink, with server-allocated properties such as <see cref="P:Seq.Api.Model.Entity.Id"/> initialized.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.PermalinksResourceGroup.RemoveAsync(Seq.Api.Model.Permalinks.PermalinkEntity,System.Threading.CancellationToken)">
            <summary>
            Remove an existing permalink.
            </summary>
            <param name="entity">The permalink to remove.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A task indicating completion.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.PermalinksResourceGroup.UpdateAsync(Seq.Api.Model.Permalinks.PermalinkEntity,System.Threading.CancellationToken)">
            <summary>
            Update an existing permalink.
            </summary>
            <param name="entity">The permalink to update.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A task indicating completion.</returns>
        </member>
        <member name="T:Seq.Api.ResourceGroups.RetentionPoliciesResourceGroup">
            <summary>
            Perform operations on retention policies.
            </summary>
        </member>
        <member name="M:Seq.Api.ResourceGroups.RetentionPoliciesResourceGroup.FindAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the retention policy with the given id; throws if the entity does not exist.
            </summary>
            <param name="id">The id of the retention policy.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The retention policy.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.RetentionPoliciesResourceGroup.ListAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieve retention policies.
            </summary>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A list containing matching retention policies.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.RetentionPoliciesResourceGroup.TemplateAsync(System.Threading.CancellationToken)">
            <summary>
            Construct a retention policy with server defaults pre-initialized.
            </summary>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The unsaved retention policy.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.RetentionPoliciesResourceGroup.AddAsync(Seq.Api.Model.Retention.RetentionPolicyEntity,System.Threading.CancellationToken)">
            <summary>
            Add a new retention policy.
            </summary>
            <param name="entity">The retention policy to add.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The retention policy, with server-allocated properties such as <see cref="P:Seq.Api.Model.Entity.Id"/> initialized.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.RetentionPoliciesResourceGroup.RemoveAsync(Seq.Api.Model.Retention.RetentionPolicyEntity,System.Threading.CancellationToken)">
            <summary>
            Remove an existing retention policy.
            </summary>
            <param name="entity">The retention policy to remove.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A task indicating completion.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.RetentionPoliciesResourceGroup.UpdateAsync(Seq.Api.Model.Retention.RetentionPolicyEntity,System.Threading.CancellationToken)">
            <summary>
            Update an existing retention policy.
            </summary>
            <param name="entity">The retention policy to update.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A task indicating completion.</returns>
        </member>
        <member name="T:Seq.Api.ResourceGroups.RolesResourceGroup">
            <summary>
            Perform operations on user roles.
            </summary>
        </member>
        <member name="M:Seq.Api.ResourceGroups.RolesResourceGroup.FindAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the role with the given id; throws if the entity does not exist.
            </summary>
            <param name="id">The id of the role.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The role.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.RolesResourceGroup.ListAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieve roles.
            </summary>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A list containing all roles available on the server.</returns>
        </member>
        <member name="T:Seq.Api.ResourceGroups.RunningTasksResourceGroup">
            <summary>
            Inspect and cancel tasks running in the Seq server.
            </summary>
        </member>
        <member name="M:Seq.Api.ResourceGroups.RunningTasksResourceGroup.FindAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the task with the given id; throws if the entity does not exist.
            </summary>
            <param name="id">The id of the task.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The task.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.RunningTasksResourceGroup.ListAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieve all tasks running on the server.
            </summary>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A list containing all running tasks.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.RunningTasksResourceGroup.RequestCancellationAsync(Seq.Api.Model.Monitoring.AlertStateEntity,System.Threading.CancellationToken)">
            <summary>
            Request cancellation of a running task. The task must support cancellation; see <see cref="P:Seq.Api.Model.Tasks.RunningTaskEntity.CanCancel"/>.
            </summary>
            <param name="entity">The task to cancel.</param>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/> allowing the cancellation operation itself to be canceled.</param>
        </member>
        <member name="T:Seq.Api.ResourceGroups.SettingsResourceGroup">
            <summary>
            Perform operations on system settings.
            </summary>
        </member>
        <member name="M:Seq.Api.ResourceGroups.SettingsResourceGroup.FindAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the setting with the given id; throws if the entity does not exist.
            </summary>
            <param name="id">The id of the setting.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The setting.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.SettingsResourceGroup.FindNamedAsync(Seq.Api.Model.Settings.SettingName,System.Threading.CancellationToken)">
            <summary>
            Retrieve the setting with the given name; throws if the entity does not exist.
            </summary>
            <param name="name">The name of the setting to retrieve. See also <see cref="T:Seq.Api.Model.Settings.SettingName"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The setting.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.SettingsResourceGroup.UpdateAsync(Seq.Api.Model.Settings.SettingEntity,System.Threading.CancellationToken)">
            <summary>
            Update an existing setting.
            </summary>
            <param name="entity">The setting to update.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A task indicating completion.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.SettingsResourceGroup.GetInternalErrorReportingAsync(System.Threading.CancellationToken)">
            <summary>
            Get internal error reporting settings.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>Internal error reporting settings.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.SettingsResourceGroup.UpdateInternalErrorReportingAsync(Seq.Api.Model.Settings.InternalErrorReportingSettingsPart,System.Threading.CancellationToken)">
            <summary>
            Update internal error reporting settings.
            </summary>
            <param name="internalErrorReporting">New internal error reporting settings.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A task indicating completion.</returns>
        </member>
        <member name="T:Seq.Api.ResourceGroups.SignalsResourceGroup">
            <summary>
            Perform operations on signals. A signal is a collection of filters that identifies a subset of the event stream.
            </summary>
        </member>
        <member name="M:Seq.Api.ResourceGroups.SignalsResourceGroup.FindAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the signal with the given id; throws if the entity does not exist.
            </summary>
            <param name="id">The id of the signal.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The signal.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.SignalsResourceGroup.ListAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Retrieve signals.
            </summary>
            <param name="ownerId">If the id of a <see cref="T:Seq.Api.Model.Users.UserEntity"/> is provided, only signals owned by them will be included in the result; if
            not specified, personal signals for all owners will be listed.</param>
            <param name="shared">If <c>true</c>, shared signals will be included in the result.</param>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A list containing matching signals.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.SignalsResourceGroup.TemplateAsync(System.Threading.CancellationToken)">
            <summary>
            Construct a signal with server defaults pre-initialized.
            </summary>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The unsaved signal.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.SignalsResourceGroup.AddAsync(Seq.Api.Model.Signals.SignalEntity,System.Threading.CancellationToken)">
            <summary>
            Add a new signal.
            </summary>
            <param name="entity">The signal to add.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The signal, with server-allocated properties such as <see cref="P:Seq.Api.Model.Entity.Id"/> initialized.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.SignalsResourceGroup.RemoveAsync(Seq.Api.Model.Signals.SignalEntity,System.Threading.CancellationToken)">
            <summary>
            Remove an existing signal.
            </summary>
            <param name="entity">The signal to remove.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A task indicating completion.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.SignalsResourceGroup.UpdateAsync(Seq.Api.Model.Signals.SignalEntity,System.Threading.CancellationToken)">
            <summary>
            Update an existing signal.
            </summary>
            <param name="entity">The signal to update.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A task indicating completion.</returns>
        </member>
        <member name="T:Seq.Api.ResourceGroups.SqlQueriesResourceGroup">
            <summary>
            Perform operations on saved SQL queries.
            </summary>
        </member>
        <member name="M:Seq.Api.ResourceGroups.SqlQueriesResourceGroup.FindAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the query with the given id; throws if the entity does not exist.
            </summary>
            <param name="id">The id of the query.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The query.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.SqlQueriesResourceGroup.ListAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Retrieve queries.
            </summary>
            <param name="ownerId">If the id of a <see cref="T:Seq.Api.Model.Users.UserEntity"/> is provided, only queries owned by them will be included in the result; if
            not specified, personal queries for all owners will be listed.</param>
            <param name="shared">If <c>true</c>, shared queries will be included in the result.</param>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A list containing matching queries.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.SqlQueriesResourceGroup.TemplateAsync(System.Threading.CancellationToken)">
            <summary>
            Construct a query with server defaults pre-initialized.
            </summary>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The unsaved query.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.SqlQueriesResourceGroup.AddAsync(Seq.Api.Model.SqlQueries.SqlQueryEntity,System.Threading.CancellationToken)">
            <summary>
            Add a new query.
            </summary>
            <param name="entity">The query to add.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The query, with server-allocated properties such as <see cref="P:Seq.Api.Model.Entity.Id"/> initialized.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.SqlQueriesResourceGroup.RemoveAsync(Seq.Api.Model.SqlQueries.SqlQueryEntity,System.Threading.CancellationToken)">
            <summary>
            Remove an existing query.
            </summary>
            <param name="entity">The query to remove.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A task indicating completion.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.SqlQueriesResourceGroup.UpdateAsync(Seq.Api.Model.SqlQueries.SqlQueryEntity,System.Threading.CancellationToken)">
            <summary>
            Update an existing query.
            </summary>
            <param name="entity">The query to update.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A task indicating completion.</returns>
        </member>
        <member name="T:Seq.Api.ResourceGroups.UpdatesResourceGroup">
            <summary>
            Perform operations on known available Seq versions.
            </summary>
        </member>
        <member name="M:Seq.Api.ResourceGroups.UpdatesResourceGroup.ListAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieve available updates.
            </summary>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A list of available updates.</returns>
        </member>
        <member name="T:Seq.Api.ResourceGroups.UsersResourceGroup">
            <summary>
            Perform operations on users.
            </summary>
        </member>
        <member name="M:Seq.Api.ResourceGroups.UsersResourceGroup.FindAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the user with the given id; throws if the entity does not exist.
            </summary>
            <param name="id">The id of the user.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The user.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.UsersResourceGroup.FindCurrentAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieve the current logged-in user.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The user, or <c>null</c> if no user is logged in.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.UsersResourceGroup.ListAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieve users.
            </summary>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A list containing matching users.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.UsersResourceGroup.TemplateAsync(System.Threading.CancellationToken)">
            <summary>
            Construct a user with server defaults pre-initialized.
            </summary>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The unsaved user.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.UsersResourceGroup.AddAsync(Seq.Api.Model.Users.UserEntity,System.Threading.CancellationToken)">
            <summary>
            Add a new user.
            </summary>
            <param name="entity">The user to add.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The user, with server-allocated properties such as <see cref="P:Seq.Api.Model.Entity.Id"/> initialized.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.UsersResourceGroup.RemoveAsync(Seq.Api.Model.Users.UserEntity,System.Threading.CancellationToken)">
            <summary>
            Remove an existing user.
            </summary>
            <param name="entity">The user to remove.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A task indicating completion.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.UsersResourceGroup.UpdateAsync(Seq.Api.Model.Users.UserEntity,System.Threading.CancellationToken)">
            <summary>
            Update an existing user.
            </summary>
            <param name="entity">The user to update.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A task indicating completion.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.UsersResourceGroup.LoginAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Log in, using the supplied <paramref name="username"/> and <paramref name="password"/>. Only valid when
            Active Directory or username/password authentication is enabled.
            </summary>
            <param name="username">The username to log in with.</param>
            <param name="password">The password to log in with.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The logged-in user.</returns>
            <remarks>Following successful login, other calls through the API client will authenticate as the logged-in user.</remarks>
        </member>
        <member name="M:Seq.Api.ResourceGroups.UsersResourceGroup.LogoutAsync(System.Threading.CancellationToken)">
            <summary>
            Log out the current user.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A task indicating completion.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.UsersResourceGroup.GetSearchHistoryAsync(Seq.Api.Model.Users.UserEntity,System.Threading.CancellationToken)">
            <summary>
            Retrieve the search history for the given user. Only allows the current user's search history to be retrieved.
            </summary>
            <param name="entity">The user to retrieve search history for; must be logged in or the owner of the authenticating API key.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The the user's search history.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.UsersResourceGroup.UpdateSearchHistoryAsync(Seq.Api.Model.Users.SearchHistoryEntity,Seq.Api.Model.Users.SearchHistoryItemPart,System.Threading.CancellationToken)">
            <summary>
            Update a user's search history by adding, removing, or modifying <paramref name="item"/>.
            </summary>
            <param name="entity">The search history for the user.</param>
            <param name="item">The item to modify.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A task signalling completion.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.UsersResourceGroup.LoginWindowsIntegratedAsync(System.Threading.CancellationToken)">
            <summary>
            Log in, using integrated Windows authentication. Only available when Active Directory authentication is enabled.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The logged-in user.</returns>
            <remarks>Following successful login, other calls through the API client will authenticate as the logged-in user.</remarks>
        </member>
        <member name="T:Seq.Api.ResourceGroups.WorkspacesResourceGroup">
            <summary>
            Perform operations on workspaces.
            </summary>
        </member>
        <member name="M:Seq.Api.ResourceGroups.WorkspacesResourceGroup.FindAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the dashboard with the given id; throws if the entity does not exist.
            </summary>
            <param name="id">The id of the dashboard.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The dashboard.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.WorkspacesResourceGroup.ListAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Retrieve workspaces.
            </summary>
            <param name="ownerId">If the id of a <see cref="T:Seq.Api.Model.Users.UserEntity"/> is provided, only workspaces owned by them will be included in the result; if
            not specified, personal workspaces for all owners will be listed.</param>
            <param name="shared">If <c>true</c>, shared workspaces will be included in the result.</param>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A list containing matching workspaces.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.WorkspacesResourceGroup.TemplateAsync(System.Threading.CancellationToken)">
            <summary>
            Construct a workspace with server defaults pre-initialized.
            </summary>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The unsaved workspace.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.WorkspacesResourceGroup.AddAsync(Seq.Api.Model.Workspaces.WorkspaceEntity,System.Threading.CancellationToken)">
            <summary>
            Add a new workspace.
            </summary>
            <param name="entity">The workspace to add.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>The workspace, with server-allocated properties such as <see cref="P:Seq.Api.Model.Entity.Id"/> initialized.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.WorkspacesResourceGroup.RemoveAsync(Seq.Api.Model.Workspaces.WorkspaceEntity,System.Threading.CancellationToken)">
            <summary>
            Remove an existing workspace.
            </summary>
            <param name="entity">The workspace to remove.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A task indicating completion.</returns>
        </member>
        <member name="M:Seq.Api.ResourceGroups.WorkspacesResourceGroup.UpdateAsync(Seq.Api.Model.Workspaces.WorkspaceEntity,System.Threading.CancellationToken)">
            <summary>
            Update an existing workspace.
            </summary>
            <param name="entity">The workspace to update.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> allowing the operation to be canceled.</param>
            <returns>A task indicating completion.</returns>
        </member>
        <member name="T:Seq.Api.SeqConnection">
            <summary>
            Exposes high-level (typed) interactions with the Seq API through various resource groups.
            </summary>
        </member>
        <member name="M:Seq.Api.SeqConnection.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Construct a <see cref="T:Seq.Api.SeqConnection"/>.
            </summary>
            <param name="serverUrl">The base URL of the Seq server.</param>
            <param name="apiKey">An API key to use when making requests to the server, if required.</param>
            <param name="useDefaultCredentials">Whether default credentials will be sent with HTTP requests; the default is <c>true</c>.</param>
        </member>
        <member name="M:Seq.Api.SeqConnection.#ctor(System.String,System.String,System.Action{System.Net.Http.HttpClientHandler})">
            <summary>
            Construct a <see cref="T:Seq.Api.SeqConnection"/>.
            </summary>
            <param name="serverUrl">The base URL of the Seq server.</param>
            <param name="apiKey">An API key to use when making requests to the server, if required.</param>
            <param name="configureHttpClientHandler">An optional callback to configure the <see cref="T:System.Net.Http.HttpClientHandler"/> used when making HTTP requests
            to the Seq API.</param>
        </member>
        <member name="M:Seq.Api.SeqConnection.Dispose">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:Seq.Api.SeqConnection.Client">
            <summary>
            Access the lower-level <see cref="T:Seq.Api.Client.SeqApiClient"/> that can be used for resource-oriented navigation through
            the HTTP API.
            </summary>
        </member>
        <member name="P:Seq.Api.SeqConnection.AlertState">
            <summary>
            List and administratively remove active alerts. To create/edit/remove alerts in normal
            circumstances, use <see cref="P:Seq.Api.SeqConnection.Dashboards"/>.
            </summary>
        </member>
        <member name="P:Seq.Api.SeqConnection.ApiKeys">
            <summary>
            Perform operations on API keys.
            </summary>
        </member>
        <member name="P:Seq.Api.SeqConnection.AppInstances">
            <summary>
            Perform operations on Seq app instances.
            </summary>
        </member>
        <member name="P:Seq.Api.SeqConnection.Apps">
            <summary>
            Perform operations on Seq app packages.
            </summary>
        </member>
        <member name="P:Seq.Api.SeqConnection.Backups">
            <summary>
            Perform operations on backups.
            </summary>
        </member>
        <member name="P:Seq.Api.SeqConnection.Dashboards">
            <summary>
            Perform operations on dashboards.
            </summary>
        </member>
        <member name="P:Seq.Api.SeqConnection.Data">
            <summary>
            Execute SQL-style queries against the API.
            </summary>
        </member>
        <member name="P:Seq.Api.SeqConnection.Diagnostics">
            <summary>
            Access server diagnostics.
            </summary>
        </member>
        <member name="P:Seq.Api.SeqConnection.Events">
            <summary>
            Read and subscribe to events from the event store.
            </summary>
        </member>
        <member name="P:Seq.Api.SeqConnection.Expressions">
            <summary>
            Perform operations on queries and filter expressions.
            </summary>
        </member>
        <member name="P:Seq.Api.SeqConnection.Feeds">
            <summary>
            Perform operations on NuGet feeds.
            </summary>
        </member>
        <member name="P:Seq.Api.SeqConnection.Licenses">
            <summary>
            Perform operations on the Seq license certificate.
            </summary>
        </member>
        <member name="P:Seq.Api.SeqConnection.Permalinks">
            <summary>
            Perform operations on permalinked events.
            </summary>
        </member>
        <member name="P:Seq.Api.SeqConnection.RetentionPolicies">
            <summary>
            Perform operations on retention policies.
            </summary>
        </member>
        <member name="P:Seq.Api.SeqConnection.Roles">
            <summary>
            Perform operations on user roles.
            </summary>
        </member>
        <member name="P:Seq.Api.SeqConnection.RunningTasks">
            <summary>
            Perform operations on tasks running in the Seq server.
            </summary>
        </member>
        <member name="P:Seq.Api.SeqConnection.Settings">
            <summary>
            Perform operations on system settings.
            </summary>
        </member>
        <member name="P:Seq.Api.SeqConnection.Signals">
            <summary>
            Perform operations on signals.
            </summary>
        </member>
        <member name="P:Seq.Api.SeqConnection.SqlQueries">
            <summary>
            Perform operations on saved SQL queries.
            </summary>
        </member>
        <member name="P:Seq.Api.SeqConnection.Updates">
            <summary>
            Perform operations on known available Seq versions.
            </summary>
        </member>
        <member name="P:Seq.Api.SeqConnection.Users">
            <summary>
            Perform operations on users.
            </summary>
        </member>
        <member name="P:Seq.Api.SeqConnection.Workspaces">
            <summary>
            Perform operations on workspaces.
            </summary>
        </member>
        <member name="M:Seq.Api.SeqConnection.EnsureConnectedAsync(System.TimeSpan)">
            <summary>
            Check that the Seq API is available. If the initial attempt fails (i.e. the server is starting up),
            the method will try every 100 milliseconds until <paramref name="timeout"/> is reached.
            </summary>
            <param name="timeout">The maximum amount of time to retry until giving up.</param>
            <returns>A task that will complete if the API could be reached, or fault otherwise.</returns>
        </member>
        <member name="T:Seq.Api.Streams.ObservableStream`1">
            <summary>
            A stream of values read from a <see cref="T:System.Net.WebSockets.WebSocket"/>.
            </summary>
            <typeparam name="T">The type of the values.</typeparam>
        </member>
        <member name="M:Seq.Api.Streams.ObservableStream`1.Subscribe(System.IObserver{`0})">
            <inheritdoc/>
        </member>
        <member name="M:Seq.Api.Streams.ObservableStream`1.Dispose">
            <inheritdoc/>
        </member>
    </members>
</doc>
